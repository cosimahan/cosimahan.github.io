<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Cosima Han&#39;s</title>
  <subtitle>择高处立，就平处坐，向宽出行</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://blog.cosimahan.com/"/>
  <updated>2017-01-15T04:41:48.931Z</updated>
  <id>http://blog.cosimahan.com/</id>
  
  <author>
    <name>Cosima</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>VR眼镜技术原理</title>
    <link href="http://blog.cosimahan.com/VR%E7%9C%BC%E9%95%9C%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86.html"/>
    <id>http://blog.cosimahan.com/VR眼镜技术原理.html</id>
    <published>2016-12-20T03:50:24.000Z</published>
    <updated>2017-01-15T04:41:48.931Z</updated>
    
    <content type="html"><![CDATA[<h2 id="视场"><a href="#视场" class="headerlink" title="视场"></a>视场</h2><p>视场（field of view，简称FOV）是指戴上外部装置（眼镜、虚拟现实头盔等）后的可视范围，通常用角度来度量。此概念与人的视野（visual field）概念紧密相关，后者指的是人裸眼时的可视范围。一般来讲，人的水平视野有180度，垂直视野135度。</p>
<h2 id="深度感知"><a href="#深度感知" class="headerlink" title="深度感知"></a>深度感知</h2><p>深度感知（depth perception）是一种在三维世界中感知物体距离的视觉能力。这种能力建立在一系列深度线索（depth cues）之上，包括双眼线索（binocular cues）和单眼线索（monocular cues）。双眼线索有视差（disparity）、眼球汇聚（eye convergence）等，单眼线索有尺寸、近大远小等。</p>
<h2 id="双目视觉"><a href="#双目视觉" class="headerlink" title="双目视觉"></a>双目视觉</h2><p>双目视觉（binocular vision）指拥有一对眼睛的生物的视觉能力。拥有双目视觉是产生深度感知和立体视觉的基础。人类的视觉，包括深度感知，是一个复杂的过程，从双眼获取视觉信息只是一个开端，更多的处理发生在大脑中。大脑的一个重要的功能就是根据双眼不同的视觉数据推算出物体离眼睛的距离。</p>
<h2 id="立体视镜"><a href="#立体视镜" class="headerlink" title="立体视镜"></a>立体视镜</h2><p>立体视镜（stereoscope）是一种观看立体相片的设备。因为双眼间隔几英寸，人看物体的时候，两只眼睛观看的角度有细微的差别；正是这种差别使人有了深度感知的能力。两张照片从相隔几英寸的地方对着物体的同一点拍摄，得到的照片同时呈现给双眼（一张左眼，一张右眼），这样，模拟了人看物体时的自然方式，便会使观察者产生三维的错觉。立体视镜就是利用了这个原理，使观察者有身临其境的感觉。立体视镜是VR头盔的原型，两者的基本原理是相同的。</p>
<h2 id="头部跟踪"><a href="#头部跟踪" class="headerlink" title="头部跟踪"></a>头部跟踪</h2><p>头部跟踪（head tracking）技术使用多个传感器，包括陀螺仪（gyroscope）、加速计（accelerometer）和磁力计（magnetometer），感应用户的头部运动，并综合传感器获得的信息计算出用户头部在现实世界中的朝向（orientation）。</p>
<h2 id="虚拟现实"><a href="#虚拟现实" class="headerlink" title="虚拟现实"></a>虚拟现实</h2><p>虚拟现实（virtual reality）是模拟现实环境并允许用户与之交互的计算机技术。目前的一般借助电脑显示器或者头戴式显示器（head-mounted display, 简称HMD）与用户交互。头戴式显示器使用了头部跟踪设备，允许用户通过头部旋转观察虚拟世界中的周围环境，而不需要借助额外的控制器。当用户转动头部的时候，头部跟踪设备会计算出头部的朝向（用户正在往哪儿看），接着HMD同步虚拟世界中的视角，速度足够快的话，用户感觉不到延迟，得到的体验就是可以在虚拟世界中随意观看。</p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;视场&quot;&gt;&lt;a href=&quot;#视场&quot; class=&quot;headerlink&quot; title=&quot;视场&quot;&gt;&lt;/a&gt;视场&lt;/h2&gt;&lt;p&gt;视场（field of view，简称FOV）是指戴上外部装置（眼镜、虚拟现实头盔等）后的可视范围，通常用角度来度量。此概念与人的视野（vi
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>简谈几种网站漏洞及其应对方式</title>
    <link href="http://blog.cosimahan.com/%E7%AE%80%E8%B0%88%E5%87%A0%E7%A7%8D%E7%BD%91%E7%AB%99%E6%BC%8F%E6%B4%9E%E5%8F%8A%E5%85%B6%E5%BA%94%E5%AF%B9%E6%96%B9%E5%BC%8F.html"/>
    <id>http://blog.cosimahan.com/简谈几种网站漏洞及其应对方式.html</id>
    <published>2016-10-25T03:50:24.000Z</published>
    <updated>2017-01-15T04:36:31.245Z</updated>
    
    <content type="html"><![CDATA[<h2 id="用户密码存储"><a href="#用户密码存储" class="headerlink" title="用户密码存储"></a>用户密码存储</h2><p>现在的网站几乎不再使用明文密码存储的方式了，而是改用只在数据库中存储明文密码的 hash。常见的 hash 算法有 MD5 和 SHA，可以从任何一段字符串计算出一段固定长度的哈希 值。这样当用户输入密码时，直接将该密码代入算法得出 hash 值，再与存储的 hash 值对比，相同则允许登录。用户注册时也是直接存储密码的 hash 值，而不是明文密码。这样就防止数据库泄露的时候导致用户明文密码泄露。 但是随着计算能力大幅提高，MD5 和 SHA1 算法已经不再推荐使用了，这些算法被碰撞 的几率已经越来越大了。而应该采用加盐的方式，比如说 SHA256 加 salt 后 使用 PBKDF2 算法处理，该算法计算消耗的 CPU 时间非常多，能大大减慢暴力破解速度。</p>
<h2 id="XSS"><a href="#XSS" class="headerlink" title="XSS"></a>XSS</h2><p>XSS 漏洞跨站脚本攻击是常见的漏洞。其原理是攻击者向有 XSS 漏洞的网站中传入恶意的 HTML 和 JavaScript 代码，当其它用户浏览该网站时，JS 代码会自动执行，从而达到攻击的目的。比如盗取用户 Cookie 等。 常见的应对方式有过滤危险的 JavaScript 和 HTML 属性、对HTML输出进行转义等。</p>
<h2 id="SQL-注入"><a href="#SQL-注入" class="headerlink" title="SQL 注入"></a>SQL 注入</h2><p>SQL 注入攻击，也是 Web 开发中最常见的一种安全漏洞。可以用它来从数据库获取密码等信息，甚至有可能获取数据库等系统的 root 权限。造成 SQL 注入的原因是因为程序没有 有效过滤用户的输入，使攻击者成功的向服务器提交恶意的 SQL 查询代码，程序在接收后将攻击者的输入作为查询语句的一部分执行，导致原始的查询逻辑被改变，额外的执行了攻击者的代码。应对方式有输入过滤等。</p>
<h2 id="CSRF"><a href="#CSRF" class="headerlink" title="CSRF"></a>CSRF</h2><p>CSRF可以伪造受信任用户的请求来利用受信任的网站。攻击者可以在第三方网站hacker.com 设置代码，用户在浏览这些网页的时候向 victim.com 跨域发送数据，浏览器根据同源策略，带上了 victim.com 的 cookies，导致请求被伪造，可能造成很大的危害，比如添加管理员、修改密码等。通常的应对方法有对特定请求增加token验证，token是在Cookies 中读取的，而根据同源策略，hacker.com 是无法读取 victim.com 的 Cookies 的，这样就无法伪造 token。后端服务器只要对比 Cookies 中的 token 和请求头中的 token 是否一致就可以了。</p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;用户密码存储&quot;&gt;&lt;a href=&quot;#用户密码存储&quot; class=&quot;headerlink&quot; title=&quot;用户密码存储&quot;&gt;&lt;/a&gt;用户密码存储&lt;/h2&gt;&lt;p&gt;现在的网站几乎不再使用明文密码存储的方式了，而是改用只在数据库中存储明文密码的 hash。常见的 hash 
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>简谈快充技术</title>
    <link href="http://blog.cosimahan.com/%E7%AE%80%E8%B0%88%E5%BF%AB%E5%85%85%E6%8A%80%E6%9C%AF.html"/>
    <id>http://blog.cosimahan.com/简谈快充技术.html</id>
    <published>2016-09-18T03:50:24.000Z</published>
    <updated>2017-01-15T04:34:39.267Z</updated>
    
    <content type="html"><![CDATA[<p>以前移动设备的耗电量很小，电池容量也普遍不大。可如今电池一大再大，又不能让充电时间太长，于是便出现了增加电池充电速度的方法。<br>刚开始只是在USB接口提供电流的标准改改，从500mA一路增加到1500mA甚至2000mA。慢慢的2000mA也不够用了，如果电流再增加可能使Micro USB接口和数据线无法承受，于是厂家们就想了各种办法。<br>高通想了个提高电压的办法，将充电电压提高而电流不变从而增大功率，命名为Quick Charge 2.0（5V 2A就是QC1.0）。QC2.0方案可协商电压到5V、9V、12V、20V，而QC3.0则可在3.6V到20V之间以200mV增量为一档协商电压（A类方案不支持20V，通过D+和D-上的电压来协商）。<br>联发科也想了个差不多的办法，叫PUMP EXPRESS（PE，电压通过VBUS上的信号来协商）。</p>
<blockquote>
<p>QC 3.0 和 PEP 2.0 是对上一代高压快充标准的升级，双方没有再对最高功率做大的升级，而是不约而同的将重点放在了提升效率上。<br>而配合 Type C 的标准，QC 3.0 和 PEP 2.0 分别对电压做了调低，并提出了精确电压管理的概念：电压都会控制在 9V 以下，利用 3A 数据线提高电流，提升降压路线的效率；其次不会是握手检测后，直接 5V 跳 9V 跳 12V，然后固定该电压一路冲到死，而是结合电池温度、实时转换效率、电池电量等因素，以 0.2V（QC）/0.5V(PE) 做精确动态调整，提升整体效率。<br>在精确管理的同时，还有个「恒功率」的概念——如从 8V=3A 调节到 6V=4A，功率不变电压降低，这些都是 QC 3.0 和 PEP 2.0 带来的新特性。当然高通和 MTK 的分歧还是有的，比如高通认为 0.2V 充电更精细，MTK 觉得 0.5V 步进就够了，手机电池就那么大，太精细有什么卵用？<br>其他一些移动设备厂家大都按照芯片商的方案实现快充，有的还给快充换个自己的名字。</p>
</blockquote>
<p>USB Type C 协议修订了数据线规范，手机数据线从 2A 提到了 3A / 5A 两个级别，USB官方制定了USB PD充电协议，全称 USB Power DeliverySpecification，虽然现在没被普及，不过我个人认为他会成为主流技术。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;以前移动设备的耗电量很小，电池容量也普遍不大。可如今电池一大再大，又不能让充电时间太长，于是便出现了增加电池充电速度的方法。&lt;br&gt;刚开始只是在USB接口提供电流的标准改改，从500mA一路增加到1500mA甚至2000mA。慢慢的2000mA也不够用了，如果电流再增加可能
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>对某种射频卡的简单安全探究</title>
    <link href="http://blog.cosimahan.com/%E5%AF%B9%E6%9F%90%E7%A7%8D%E5%B0%84%E9%A2%91%E5%8D%A1%E7%9A%84%E7%AE%80%E5%8D%95%E5%AE%89%E5%85%A8%E6%8E%A2%E7%A9%B6.html"/>
    <id>http://blog.cosimahan.com/对某种射频卡的简单安全探究.html</id>
    <published>2016-08-15T03:50:24.000Z</published>
    <updated>2016-08-16T12:09:20.378Z</updated>
    
    <content type="html"><![CDATA[<p>本文仅是对特定射频卡（RFID卡）在技术上的简单探究，请勿以此用作非法用途。</p>
<p>本次研究的RFID卡是Mifare1 S50卡(1K容量)，符合ISO / IEC 14443型标准，其在国内比较常见，是由恩智浦公司（NXP）开发生产，亦有国产的兼容卡。</p>
<h3 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h3><p>这种卡片的就像一个强制加密的硬盘，密码和数据都存在硬盘里面，厂家出厂会把密码设置默认密码，FFFFFFFFFFFF。<br>其中一共有16个扇区，就像硬盘被分成了16个区，每个区都有独立的两个密码来管理，分别是A密码和B密码。两个密码的权限由控制位决定，一般情况只用A密码便能读写数据。另外有些控制位更改了后就不可逆转。<br>每个扇区又有四个块，就像一个分区面有四个文件一样，如下图。<br><img src="http://bbs.eeworld.com.cn/attachments/month_1111/20111128_d8c43086bb1d6f115c21WBuWqk0ddCSx.jpg.thumb.jpg" alt=""><br>扇区0的块0为制造商使用，并不可以更改，其中前4字节为卡片的UID，无需密码可读。（有一种国产M1卡可改UID，在国内叫UID卡，在国外叫 Chinese Magic Card 中国魔术卡）</p>
<h3 id="漏洞"><a href="#漏洞" class="headerlink" title="漏洞"></a>漏洞</h3><ol>
<li><p><code>PRNG漏洞</code> ：通过PRNG漏洞攻击，可获得0扇区密匙。</p>
<blockquote>
<p> 国外的安全研究人员发现，MIFARE Classic采用的是Crypto-1私有加密算法，其算法的特点就是对称式的密码算法或者说是私钥密码系统。其主要组成部分是伪随机数发生器（PRNG）、48位的线性反馈移位寄存器（LFSR）以及非线性函数。由于算法当中的Filter Function的设计出现缺陷，导致改变线性反馈移位寄存器的后8位数值就有可能得到所对应的Keystream。这个缺陷类似于802.11b WEP算法，不同的明文有极高的可能性被相同的Keystream，使得整个加密算法出现了漏洞。</p>
</blockquote>
</li>
<li><p><code>嵌套认证漏洞</code> ：使用任何一个扇区的已知密匙，获取所有扇区的密匙。</p>
<blockquote>
<p> 已知一个扇区的密钥，可以根据漏洞得到其它密钥的32位，然后对其它16位进行穷举攻击，该穷举耗时很短。</p>
</blockquote>
</li>
<li><p><code>通信嗅探</code> ：通过监听卡片和读卡设备的通讯获得密钥。</p>
<blockquote>
<p> M1卡在读卡机和卡片交互数据和密码时，使用了crapto1算法。即便同一张卡，同样的密码，嗅探得到交互数据也是随机的，但是只要获得前面提到的四组随机数组，以及UID，就可以反解出密匙。</p>
</blockquote>
</li>
</ol>
<p>由于水平有限，漏洞的详细原理不叙述，感兴趣请自行搜索相关论文。:D</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本文仅是对特定射频卡（RFID卡）在技术上的简单探究，请勿以此用作非法用途。&lt;/p&gt;
&lt;p&gt;本次研究的RFID卡是Mifare1 S50卡(1K容量)，符合ISO / IEC 14443型标准，其在国内比较常见，是由恩智浦公司（NXP）开发生产，亦有国产的兼容卡。&lt;/p&gt;

    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>WEB控制的WIFI小车（基于树莓派）</title>
    <link href="http://blog.cosimahan.com/WEB%E6%8E%A7%E5%88%B6%E7%9A%84WIFI%E5%B0%8F%E8%BD%A6%EF%BC%88%E5%9F%BA%E4%BA%8E%E6%A0%91%E8%8E%93%E6%B4%BE%EF%BC%89.html"/>
    <id>http://blog.cosimahan.com/WEB控制的WIFI小车（基于树莓派）.html</id>
    <published>2016-06-30T03:50:24.000Z</published>
    <updated>2016-08-16T10:06:46.509Z</updated>
    
    <content type="html"><![CDATA[<p>网上有不少基于树莓派的wifi小车了，不过大都不是用WEB界面来控制的，所以我就想做一个能用WEB控制的小车，用WEB控制是因为通用性比较好，不管什么设备只要有浏览器就能控制它。</p>
<h2 id="硬件部分"><a href="#硬件部分" class="headerlink" title="硬件部分"></a>硬件部分</h2><p>首先要感谢我敬爱的老师，为我提供各种资源。</p>
<h3 id="所需硬件："><a href="#所需硬件：" class="headerlink" title="所需硬件："></a>所需硬件：</h3><p>树莓派(我用的是树莓派3)<br>CSI接口的摄像头<br>PCA9685（PWM扩展板，用于产生PWM波，树莓派也可以产生PWM波，不过不好用)<br>L298N模块（驱动马达）<br>电池<br>DC-DC电源模块（将电池电压升/降至树莓派需要的5V）<br>小车底盘、马达等</p>
<h3 id="硬件连接："><a href="#硬件连接：" class="headerlink" title="硬件连接："></a>硬件连接：</h3><p>首先是电源分别接L298N模块和DC-DC电源模块，并将DC-DC电源模块的5V输出接树莓派，树莓派的几个I/O口接L298N模块，L298N模块的输出接马达。L298N模块的使用方法很简单，在这里就不多介绍了，不明白的话请自行搜索。由于小车是四轮四驱，差速转向，所以理论上一个L298N模块就够了。<br>然后树莓派和PCA9685是通过I2C协议和树莓派通信，PCA9685的PWM输出接L298N模块，关于PCA9685的使用可参见我的另一篇<a href="http://blog.cosimahan.com/PCA9685%E4%B8%AD%E6%96%87%E7%AE%80%E8%A6%81%E6%96%87%E6%A1%A3.html">博文</a>。</p>
<h2 id="软件部分"><a href="#软件部分" class="headerlink" title="软件部分"></a>软件部分</h2><p>代码全部开源，已上传GitHub <a href="https://github.com/cosimahan/MyRaspberryPi" target="_blank" rel="external">https://github.com/cosimahan/MyRaspberryPi</a> ，小车的启动程序是<code>web</code>目录下的<code>myweb.py</code>。<br>主要使用树莓派官方推荐的Python语言，和下面几个库：</p>
<ul>
<li><code>flask</code> 轻量级的web框架</li>
<li><code>RPi.GPIO</code> 控制I/O口</li>
<li><code>smbus</code> I2C通信<br>这几个库的用法不再赘述，网络上有相关资料。<br>大概思路是通过flask这一web框架，实现对发来的请求（GET和POST）进行响应（即返回HTML）和动作（即使小车行动）。<br>在网页中使用了JavaScript来实现键盘监听（这样按上下左右就可以让小车动了），JavaScript中的jQuery库来实现请求的发送。<br>视频回传是直接用的mjpg-streamer，实现WEB端视频实时回传。</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;网上有不少基于树莓派的wifi小车了，不过大都不是用WEB界面来控制的，所以我就想做一个能用WEB控制的小车，用WEB控制是因为通用性比较好，不管什么设备只要有浏览器就能控制它。&lt;/p&gt;
&lt;h2 id=&quot;硬件部分&quot;&gt;&lt;a href=&quot;#硬件部分&quot; class=&quot;header
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>PCA9685中文简要文档</title>
    <link href="http://blog.cosimahan.com/PCA9685%E4%B8%AD%E6%96%87%E7%AE%80%E8%A6%81%E6%96%87%E6%A1%A3.html"/>
    <id>http://blog.cosimahan.com/PCA9685中文简要文档.html</id>
    <published>2016-05-31T03:50:24.000Z</published>
    <updated>2016-08-17T02:54:16.954Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>近来用做了个树莓派控制的小车，可是树莓派的 PWM 输出的确不怎么样，在用 RPi.GPIO 库输出 PWM 波时还出现了找不到原因的 bug（占空比无法保持，始终自动减小至0后跳回原值），找了半天资料也没有结果，无奈之下只好用 PCA9685 这一 I2C 接口的 PWM 扩展板。<br>这里简单记录一下它的使用方法。本人水平有限，如有不当之处请指正。</p>
<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>PCA9685 是 NXP 产的 I2C 总线接口的16路12位的 PWM 发生芯片（模块），需要2.3V ~ 5.5V供电，频率可调（24Hz ~ 1526Hz），厂商提供的<a href="https://cdn-shop.adafruit.com/datasheets/PCA9685.pdf" target="_blank" rel="external">文档</a>以控制 LED 灯为例进行说明，一些细节问题还是要看厂商的文档。<br>它在 I2C 总线上的地址初始是0x40，可硬改；内部是寄存器寻址范围是0x00 ~ 0x45和0xfa ~ 0xff，其中0x00和0x01是两个模式寄存器 MODE1 和 MODE2 [1]；0x02 ~ 0x05是子地址和广播地址；从0x06 ~ 0x45每4个一组共16组，依次表示第0~15个 PWM 输出端电平高低跳变的控制数据[2]；对0xfa ~ 0xfd写数据可同时设置前面16组寄存器的内容（读无效）；0xfe是频率寄存器[3]，0xff为测试模式，不要动它。<br>[1]: MODE1寄存器共8位，从高位到低位含义为：7.restart 重新按寄存器的内容输出PWM信号，写1后动作执行并自动回0，6.extclk 选择外部/内部时钟，5.AI 自增使能，4.sleep 振荡器不工作，3~0.位是子地址和广播地址的使能位。MODE2暂时用不着。<br>[2]: 每组4个，地址由低到高为：led_on_h、led_on_l、led_off_h、led_off_h。led_on_h的高7~5位无用，第4位为常开使能，第3~0位和led_on_l的全部8位共12位共同组成跳变到高电平的时间t（在每个周期的t/4096时由低电平跳变到高电平），led_off_h 与 led_off_l同理。<br>[3]: 频率寄存器的值由公式 value=(25000000/(4096*freq))-1 得出。</p>
<h2 id="具体使用"><a href="#具体使用" class="headerlink" title="具体使用"></a>具体使用</h2><p>上电后 MODE1 中的 sleep 为1（即振荡器不工作），首先我们要设置频率（仅当 sleep 位为1时向频率寄存器写入的值才有效），设置好频率之后关闭 sleep 并向 restart 位写1后设置的频率生效并开始输出 PWM 波。接下来可以设置占空比，设置立即生效，如果观察不到输出波形请检查常开使能和常关使能是否有效。</p>
<h2 id="示例程序-Python"><a href="#示例程序-Python" class="headerlink" title="示例程序(Python)"></a>示例程序(Python)</h2><p>参考了因特网上一些资料，在此表示感谢<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># -*- coding: utf-8 -*-  </span></div><div class="line"><span class="keyword">import</span> RPi.GPIO <span class="keyword">as</span> GPIO  </div><div class="line"><span class="keyword">import</span> time</div><div class="line"><span class="keyword">import</span> smbus</div><div class="line"></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">PCA9685</span>:</span></div><div class="line">    mode1adr=<span class="number">0x00</span> <span class="comment">#0x00</span></div><div class="line">    mode2adr=<span class="number">0x01</span></div><div class="line">    subadr1=<span class="number">0x02</span></div><div class="line">    subadr2=<span class="number">0x03</span></div><div class="line">    subadr3=<span class="number">0x04</span></div><div class="line">    allcalladr=<span class="number">0x05</span></div><div class="line">    led0_on_l_adr=<span class="number">0x06</span></div><div class="line">    led0_on_h_adr=<span class="number">0x07</span></div><div class="line">    led0_off_l_adr=<span class="number">0x08</span></div><div class="line">    led0_off_h_adr=<span class="number">0x09</span></div><div class="line">    led1_on_l_adr=<span class="number">0x0a</span></div><div class="line">    led1_on_h_adr=<span class="number">0x0b</span></div><div class="line">    led1_off_l_adr=<span class="number">0x0c</span></div><div class="line">    led1_off_h_adr=<span class="number">0x0d</span></div><div class="line">    <span class="comment">#....................</span></div><div class="line">    all_led_on_l_adr=<span class="number">0xfa</span></div><div class="line">    all_led_on_h_adr=<span class="number">0xfb</span></div><div class="line">    all_led_off_l_adr=<span class="number">0xfc</span></div><div class="line">    all_led_off_h_adr=<span class="number">0xfd</span></div><div class="line">    pre_scale=<span class="number">0xfe</span> <span class="comment">#freq</span></div><div class="line">    </div><div class="line">    init_mode=<span class="number">0x01</span></div><div class="line">    </div><div class="line">    freq = <span class="number">0</span></div><div class="line">    </div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self,i2c_ch,PCA9685adr)</span>:</span></div><div class="line">        self.PCA9685adr = PCA9685adr</div><div class="line">        self.bus = smbus.SMBus(i2c_ch)</div><div class="line">        self.bus.write_byte_data(self.PCA9685adr,self.mode1adr,self.init_mode)</div><div class="line">        self.setFreq(<span class="number">50</span>)</div><div class="line">        </div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">toByte</span><span class="params">(self,x1)</span>:</span></div><div class="line">        <span class="keyword">if</span> x1&lt;<span class="number">0xff</span>:</div><div class="line">            x_l=x1</div><div class="line">            x_h=<span class="number">0x00</span></div><div class="line">        <span class="keyword">else</span> :</div><div class="line">            x_h=x1/<span class="number">256</span></div><div class="line">            x_l=x1-x_h*<span class="number">256</span></div><div class="line">        <span class="keyword">return</span> x_l,x_h</div><div class="line">        </div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">write_16</span><span class="params">(self,led_num,uInt16)</span>:</span></div><div class="line">        (uInt16L,uInt16H)=self.toByte(uInt16)</div><div class="line">        self.bus.write_byte_data(self.PCA9685adr,led_num,uInt16L)</div><div class="line">        self.bus.write_byte_data(self.PCA9685adr,led_num+<span class="number">1</span>,uInt16H)</div><div class="line">        </div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">write_8</span><span class="params">(self,led_num,uInt8)</span>:</span></div><div class="line">        self.bus.write_byte_data(self.PCA9685adr,led_num,uInt8)</div><div class="line">        </div><div class="line">        </div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">setFreq</span><span class="params">(self,freq)</span>:</span></div><div class="line">        data=(<span class="number">25000000</span>/(<span class="number">4096</span>*freq))<span class="number">-1</span></div><div class="line">        data=int(data+<span class="number">0.49</span>)</div><div class="line">        oldmode = self.bus.read_byte_data(self.PCA9685adr,self.mode1adr)</div><div class="line">        newmode = (oldmode &amp; <span class="number">0x7F</span>) | <span class="number">0x10</span></div><div class="line">        self.bus.write_byte_data(self.PCA9685adr,self.mode1adr,newmode)</div><div class="line">        self.bus.write_byte_data(self.PCA9685adr,self.pre_scale,data)</div><div class="line">        self.bus.write_byte_data(self.PCA9685adr,self.mode1adr,oldmode)</div><div class="line">        <span class="keyword">print</span> str(freq)+<span class="string">' F'</span></div><div class="line">        time.sleep(<span class="number">0.005</span>)</div><div class="line">        self.bus.write_byte_data(self.PCA9685adr,self.mode1adr,oldmode|<span class="number">0xa1</span>)</div><div class="line">        self.bus.write_byte_data(self.PCA9685adr,self.mode1adr,oldmode)</div><div class="line">        self.freq = freq</div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">getFreq</span><span class="params">(self)</span>:</span></div><div class="line">        <span class="keyword">return</span> self.freq</div><div class="line">    </div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">setDuty</span><span class="params">(self,led_num,duty)</span>:</span></div><div class="line">        data = int(float(duty)/<span class="number">100</span>*<span class="number">4095</span>)</div><div class="line">        <span class="keyword">print</span> str([duty,data])+<span class="string">' E'</span></div><div class="line">        <span class="keyword">if</span> duty &lt; <span class="number">0</span>:</div><div class="line">            self.write_16(self.led0_on_l_adr+<span class="number">4</span>*led_num,<span class="number">0</span>)</div><div class="line">            self.write_16(self.led0_off_l_adr+<span class="number">4</span>*led_num,<span class="number">0</span>)</div><div class="line">        <span class="keyword">if</span> duty &lt; <span class="number">100</span> <span class="keyword">and</span> duty &gt;= <span class="number">0</span>:</div><div class="line">            self.write_16(self.led0_on_l_adr+<span class="number">4</span>*led_num,<span class="number">0</span>)</div><div class="line">            self.write_16(self.led0_off_l_adr+<span class="number">4</span>*led_num,data)</div><div class="line">        <span class="keyword">elif</span> duty &gt;= <span class="number">100</span>:</div><div class="line">            self.write_16(self.led0_on_l_adr+<span class="number">4</span>*led_num,<span class="number">0x1000</span>)</div><div class="line">            self.write_16(self.led0_off_l_adr+<span class="number">4</span>*led_num,<span class="number">0x0FFF</span>)</div></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;近来用做了个树莓派控制的小车，可是树莓派的 PWM 输出的确不怎么样，在用 RPi.GPIO 库输出 PWM 波时还出现了找不到原因的 bu
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>sqlmap的简单应用</title>
    <link href="http://blog.cosimahan.com/sqlmap%E7%9A%84%E7%AE%80%E5%8D%95%E5%BA%94%E7%94%A8.html"/>
    <id>http://blog.cosimahan.com/sqlmap的简单应用.html</id>
    <published>2016-05-08T03:50:24.000Z</published>
    <updated>2016-08-16T06:36:44.835Z</updated>
    
    <content type="html"><![CDATA[<p>引用下官方介绍：sqlmap is an open source penetration testing tool that automates the process of detecting and exploiting SQL injection flaws and taking over of database servers. 即sqlmap是个开源的测试工具，能自动检测和利用SQL注入漏洞。<br>本文以获取 DBMS 用户和密码 hash 为例，简单介绍下sqlmap的使用。<br>sqlmap的使用很简单，其命令选项被归类为目标（Target）选项、请求（Request）选项、优化、注入、检测、技巧（Techniques）、指纹、枚举等。使用如下命令可获取帮助</p>
<blockquote>
<p>python sqlmap.py -h</p>
</blockquote>
<p>当你发现疑似可以注入的地方时，使用 -u 参数指定注入页面，如果需以 post 方式注入，可使用 –data 参数，用法如下：</p>
<blockquote>
<p>sqlmap.py -u “<a href="http://example.xxx/1.php?id=2&amp;pw=3" target="_blank" rel="external">http://example.xxx/1.php?id=2&amp;pw=3</a>“  (get方式)</p>
<p>sqlmap.py -u “<a href="http://example.xxx/1.php" target="_blank" rel="external">http://example.xxx/1.php</a>“ –data “id=2&amp;pw=3”  (post方式)</p>
</blockquote>
<p>如果可以注入，sqlmap 会给出数据库的相关信息提示。<br>接下来就该列出 DBMS 数据库了，使用 –dbs 参数：</p>
<blockquote>
<p>sqlmap.py -u “<a href="http://example.xxx/1.php" target="_blank" rel="external">http://example.xxx/1.php</a>“ –data “id=2&amp;pw=3”  –dbs</p>
</blockquote>
<p>等了一会，枚举完成，根据这过程中的相关提示我们知道目标为运行在 Ubuntu 上的 MySQL ，所以我们的目标是“mysql”这个数据库。<br>然后需要列出 mysql 数据库中有哪些表，使用 -D 指定数据库，–tables 枚举表：</p>
<blockquote>
<p>sqlmap.py -u “<a href="http://example.xxx/1.php" target="_blank" rel="external">http://example.xxx/1.php</a>“ –data “id=2&amp;pw=3”  -D mysql –tables</p>
</blockquote>
<p>在结果中有 user 这个表，根据猜想这个表里应该有用户名和密码，下一步枚举这个表中的列，使用 -T 指定表 –columns 枚举列：</p>
<blockquote>
<p>sqlmap.py -u “<a href="http://example.xxx/1.php" target="_blank" rel="external">http://example.xxx/1.php</a>“ –data “id=2&amp;pw=3”  -D mysql -T user –columns</p>
</blockquote>
<p>结果有好多，其中有 id 和 password 等列，印证了我们的猜想。<br>最后一步便是把用户名和密码 dump 出来，使用 -C 指定列，使用 –dump 来 dump：</p>
<blockquote>
<p>sqlmap.py -u “<a href="http://example.xxx/1.php" target="_blank" rel="external">http://example.xxx/1.php</a>“ –data “id=2&amp;pw=3”  -D mysql -T user -C id,password –dump</p>
</blockquote>
<p>经过一番等待之后，结果便出来了。</p>
<p>如果是原始密码弱密码的话，可以轻易在一些解密网站上查得到原始密码。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;引用下官方介绍：sqlmap is an open source penetration testing tool that automates the process of detecting and exploiting SQL injection flaws and 
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>简单的Base64编码解码程序（纯C语言）</title>
    <link href="http://blog.cosimahan.com/%E7%AE%80%E5%8D%95%E7%9A%84Base64%E7%BC%96%E7%A0%81%E8%A7%A3%E7%A0%81%E7%A8%8B%E5%BA%8F%EF%BC%88%E7%BA%AFC%E8%AF%AD%E8%A8%80%EF%BC%89.html"/>
    <id>http://blog.cosimahan.com/简单的Base64编码解码程序（纯C语言）.html</id>
    <published>2016-04-19T12:50:24.000Z</published>
    <updated>2016-08-16T06:36:44.886Z</updated>
    
    <content type="html"><![CDATA[<p>先声明一下这其中编码解码的算法部分不是我手打的，是参考现有的程序。<br>该代码编译后可直接运行，亦可带参运行，程序内有提示。<br>有时间我会把它做成PHP版，那就更方便了。</p>
<blockquote>
<p>main.c</p>
</blockquote>
<figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div><div class="line">148</div><div class="line">149</div><div class="line">150</div><div class="line">151</div><div class="line">152</div><div class="line">153</div><div class="line">154</div><div class="line">155</div><div class="line">156</div><div class="line">157</div><div class="line">158</div><div class="line">159</div><div class="line">160</div><div class="line">161</div><div class="line">162</div><div class="line">163</div><div class="line">164</div><div class="line">165</div><div class="line">166</div><div class="line">167</div><div class="line">168</div><div class="line">169</div><div class="line">170</div><div class="line">171</div><div class="line">172</div><div class="line">173</div><div class="line">174</div><div class="line">175</div><div class="line">176</div><div class="line">177</div><div class="line">178</div><div class="line">179</div><div class="line">180</div><div class="line">181</div><div class="line">182</div><div class="line">183</div><div class="line">184</div><div class="line">185</div><div class="line">186</div><div class="line">187</div><div class="line">188</div><div class="line">189</div><div class="line">190</div><div class="line">191</div><div class="line">192</div><div class="line">193</div><div class="line">194</div><div class="line">195</div><div class="line">196</div><div class="line">197</div><div class="line">198</div><div class="line">199</div><div class="line">200</div><div class="line">201</div><div class="line">202</div><div class="line">203</div><div class="line">204</div><div class="line">205</div><div class="line">206</div><div class="line">207</div><div class="line">208</div><div class="line">209</div><div class="line">210</div><div class="line">211</div><div class="line">212</div><div class="line">213</div><div class="line">214</div><div class="line">215</div><div class="line">216</div><div class="line">217</div><div class="line">218</div><div class="line">219</div><div class="line">220</div><div class="line">221</div><div class="line">222</div><div class="line">223</div><div class="line">224</div><div class="line">225</div><div class="line">226</div><div class="line">227</div><div class="line">228</div><div class="line">229</div><div class="line">230</div><div class="line">231</div><div class="line">232</div><div class="line">233</div><div class="line">234</div><div class="line">235</div><div class="line">236</div><div class="line">237</div><div class="line">238</div><div class="line">239</div><div class="line">240</div><div class="line">241</div><div class="line">242</div><div class="line">243</div><div class="line">244</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdlib.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string.h&gt;</span></span></div><div class="line"><span class="keyword">const</span> <span class="keyword">char</span> base[] = <span class="string">"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/="</span>;</div><div class="line"><span class="function"><span class="keyword">char</span>* <span class="title">base64_encode</span><span class="params">(<span class="keyword">const</span> <span class="keyword">char</span>* data, <span class="keyword">int</span> data_len)</span></span>;</div><div class="line"><span class="function"><span class="keyword">char</span>* <span class="title">base64_decode</span><span class="params">(<span class="keyword">const</span> <span class="keyword">char</span>* data, <span class="keyword">int</span> data_len)</span></span>;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">do_decode</span><span class="params">(<span class="keyword">char</span>*)</span></span>;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">do_encode</span><span class="params">(<span class="keyword">char</span>*)</span></span>;</div><div class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">char</span> <span class="title">find_pos</span><span class="params">(<span class="keyword">char</span> ch)</span></span>;</div><div class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAXIN = <span class="number">1001</span>;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span>* argv[])</span></span></div><div class="line">&#123;</div><div class="line"></div><div class="line">	<span class="keyword">char</span> e_d = <span class="string">'a'</span>;</div><div class="line">	<span class="keyword">char</span> t[MAXIN] = <span class="string">""</span>;</div><div class="line">	<span class="comment">//printf("%d@%s@%s", argc, argv[0], argv[1]);</span></div><div class="line">	<span class="keyword">if</span> (argc &gt; <span class="number">1</span>) &#123;</div><div class="line">		<span class="keyword">if</span> ((argc == <span class="number">2</span> || argc == <span class="number">3</span>) &amp;&amp; (argv[<span class="number">1</span>][<span class="number">1</span>] == <span class="number">0</span>) &amp;&amp; (argv[<span class="number">1</span>][<span class="number">0</span>] == <span class="string">'e'</span> || argv[<span class="number">1</span>][<span class="number">0</span>] == <span class="string">'d'</span>)) &#123;</div><div class="line"></div><div class="line">			e_d = argv[<span class="number">1</span>][<span class="number">0</span>];</div><div class="line">			<span class="keyword">if</span> (e_d == <span class="string">'e'</span>) &#123;</div><div class="line">				<span class="keyword">if</span> (argc == <span class="number">2</span>) &#123;</div><div class="line">					<span class="built_in">printf</span>(<span class="string">"Max input length is %d\n"</span>, MAXIN - <span class="number">1</span>);</div><div class="line">					<span class="built_in">scanf</span>(<span class="string">"%s"</span>, t);</div><div class="line">					do_encode(t);</div><div class="line">				&#125;</div><div class="line">				<span class="keyword">else</span> do_encode(argv[<span class="number">2</span>]);</div><div class="line">			&#125;</div><div class="line">			<span class="keyword">else</span> <span class="keyword">if</span> (e_d == <span class="string">'d'</span>) &#123;</div><div class="line">				<span class="keyword">if</span> (argc == <span class="number">2</span>) &#123;</div><div class="line">					<span class="built_in">printf</span>(<span class="string">"Max input length is %d\n"</span>, MAXIN - <span class="number">1</span>);</div><div class="line">					<span class="built_in">scanf</span>(<span class="string">"%s"</span>, t);</div><div class="line">					do_decode(t);</div><div class="line">				&#125;</div><div class="line">				<span class="keyword">else</span> do_decode(argv[<span class="number">2</span>]);</div><div class="line">			&#125;</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">" Usage: %s Commands [String] \nCommands:\n\te - encode\n\td - decode\n"</span>,argv[<span class="number">0</span>]);</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">else</span> &#123;</div><div class="line">		<span class="built_in">printf</span>(<span class="string">"Base64 encode/decode(e/d) ?\n"</span>);</div><div class="line">		<span class="keyword">char</span> input_ed[<span class="number">111</span>] = <span class="string">""</span>;</div><div class="line">		<span class="keyword">while</span> ((<span class="built_in">scanf</span>(<span class="string">"%s"</span>, input_ed)), e_d = input_ed[<span class="number">0</span>], (e_d != <span class="string">'e'</span> &amp;&amp; e_d != <span class="string">'d'</span> || input_ed[<span class="number">1</span>] != <span class="number">0</span>))<span class="built_in">printf</span>(<span class="string">"Input Eror\n"</span>);</div><div class="line"></div><div class="line"></div><div class="line">		<span class="built_in">printf</span>(<span class="string">"Max input length is %d, enter CTRL+C to exit.\n"</span>, MAXIN - <span class="number">1</span>);</div><div class="line"></div><div class="line">		<span class="keyword">while</span> (<span class="built_in">printf</span>(<span class="string">"\nPlease input: "</span>)) &#123;</div><div class="line"></div><div class="line">			<span class="built_in">scanf</span>(<span class="string">"%s"</span>, t);</div><div class="line"></div><div class="line"></div><div class="line">			<span class="keyword">if</span> (e_d == <span class="string">'e'</span>) &#123;</div><div class="line">				do_encode(t);</div><div class="line">			&#125;</div><div class="line">			<span class="keyword">else</span> <span class="keyword">if</span> (e_d == <span class="string">'d'</span>) &#123;</div><div class="line">				do_decode(t);</div><div class="line">			&#125;</div><div class="line">			<span class="keyword">else</span> &#123;</div><div class="line">				<span class="built_in">printf</span>(<span class="string">"ERROR\n"</span>);</div><div class="line">				<span class="keyword">break</span>;</div><div class="line">			&#125;</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div><div class="line"><span class="comment">/* */</span></div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">do_encode</span><span class="params">(<span class="keyword">char</span>* t)</span> </span>&#123;</div><div class="line"></div><div class="line">	<span class="keyword">int</span> j = <span class="built_in">strlen</span>(t);</div><div class="line"></div><div class="line">	<span class="keyword">char</span> *enc = base64_encode(t, j);</div><div class="line">	<span class="keyword">int</span> len = <span class="built_in">strlen</span>(enc);</div><div class="line">	<span class="keyword">char</span> *dec = base64_decode(enc, len);</div><div class="line">	<span class="built_in">printf</span>(<span class="string">"\noriginal: %s\n"</span>, t);</div><div class="line">	<span class="built_in">printf</span>(<span class="string">"\nencoded : %s\n"</span>, enc);</div><div class="line">	<span class="built_in">printf</span>(<span class="string">"\ndecoded : %s\n"</span>, dec);</div><div class="line">	<span class="built_in">free</span>(enc);</div><div class="line">	<span class="built_in">free</span>(dec);</div><div class="line"></div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">do_decode</span><span class="params">(<span class="keyword">char</span>* t)</span> </span>&#123;</div><div class="line">	<span class="comment">//char t[MAXIN] = "";</span></div><div class="line">	<span class="comment">//scanf("%s", t);</span></div><div class="line">	<span class="comment">//int i = 0;</span></div><div class="line">	<span class="keyword">int</span> j = <span class="built_in">strlen</span>(t);</div><div class="line"></div><div class="line">	<span class="keyword">char</span> *dec = base64_decode(t, j);</div><div class="line">	<span class="keyword">int</span> len = <span class="built_in">strlen</span>(dec);</div><div class="line">	<span class="keyword">char</span> *enc = base64_encode(dec, len);</div><div class="line">	<span class="built_in">printf</span>(<span class="string">"\noriginal: %s\n"</span>, t);</div><div class="line">	<span class="built_in">printf</span>(<span class="string">"\ndecoded : %s\n"</span>, dec);</div><div class="line">	<span class="built_in">printf</span>(<span class="string">"\nencoded : %s\n"</span>, enc);</div><div class="line">	<span class="built_in">free</span>(enc);</div><div class="line">	<span class="built_in">free</span>(dec);</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">char</span> *<span class="title">base64_encode</span><span class="params">(<span class="keyword">const</span> <span class="keyword">char</span>* data, <span class="keyword">int</span> data_len)</span></span></div><div class="line">&#123;</div><div class="line">	<span class="comment">//int data_len = strlen(data); </span></div><div class="line">	<span class="keyword">int</span> prepare = <span class="number">0</span>;</div><div class="line">	<span class="keyword">int</span> ret_len;</div><div class="line">	<span class="keyword">int</span> temp = <span class="number">0</span>;</div><div class="line">	<span class="keyword">char</span> *ret = <span class="literal">NULL</span>;</div><div class="line">	<span class="keyword">char</span> *f = <span class="literal">NULL</span>;</div><div class="line">	<span class="keyword">int</span> tmp = <span class="number">0</span>;</div><div class="line">	<span class="keyword">char</span> changed[<span class="number">4</span>];</div><div class="line">	<span class="keyword">int</span> i = <span class="number">0</span>;</div><div class="line">	ret_len = data_len / <span class="number">3</span>;</div><div class="line">	temp = data_len % <span class="number">3</span>;</div><div class="line">	<span class="keyword">if</span> (temp &gt; <span class="number">0</span>)</div><div class="line">	&#123;</div><div class="line">		ret_len += <span class="number">1</span>;</div><div class="line">	&#125;</div><div class="line">	ret_len = ret_len * <span class="number">4</span> + <span class="number">1</span>;</div><div class="line">	ret = (<span class="keyword">char</span> *)<span class="built_in">malloc</span>(ret_len);</div><div class="line"></div><div class="line">	<span class="keyword">if</span> (ret == <span class="literal">NULL</span>)</div><div class="line">	&#123;</div><div class="line">		<span class="built_in">printf</span>(<span class="string">"No enough memory.\n"</span>);</div><div class="line">		<span class="built_in">exit</span>(<span class="number">0</span>);</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">memset</span>(ret, <span class="number">0</span>, ret_len);</div><div class="line">	f = ret;</div><div class="line">	<span class="keyword">while</span> (tmp &lt; data_len)</div><div class="line">	&#123;</div><div class="line">		temp = <span class="number">0</span>;</div><div class="line">		prepare = <span class="number">0</span>;</div><div class="line">		<span class="built_in">memset</span>(changed, <span class="string">'\0'</span>, <span class="number">4</span>);</div><div class="line">		<span class="keyword">while</span> (temp &lt; <span class="number">3</span>)</div><div class="line">		&#123;</div><div class="line">			<span class="comment">//printf("tmp = %d\n", tmp); </span></div><div class="line">			<span class="keyword">if</span> (tmp &gt;= data_len)</div><div class="line">			&#123;</div><div class="line">				<span class="keyword">break</span>;</div><div class="line">			&#125;</div><div class="line">			prepare = ((prepare &lt;&lt; <span class="number">8</span>) | (data[tmp] &amp; <span class="number">0xFF</span>));</div><div class="line">			tmp++;</div><div class="line">			temp++;</div><div class="line">		&#125;</div><div class="line">		prepare = (prepare &lt;&lt; ((<span class="number">3</span> - temp) * <span class="number">8</span>));</div><div class="line">		<span class="comment">//printf("before for : temp = %d, prepare = %d\n", temp, prepare); </span></div><div class="line">		<span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">4</span>; i++)</div><div class="line">		&#123;</div><div class="line">			<span class="keyword">if</span> (temp &lt; i)</div><div class="line">			&#123;</div><div class="line">				changed[i] = <span class="number">0x40</span>;</div><div class="line">			&#125;</div><div class="line">			<span class="keyword">else</span></div><div class="line">			&#123;</div><div class="line">				changed[i] = (prepare &gt;&gt; ((<span class="number">3</span> - i) * <span class="number">6</span>)) &amp; <span class="number">0x3F</span>;</div><div class="line">			&#125;</div><div class="line">			*f = base[changed[i]];</div><div class="line">			<span class="comment">//printf("%.2X", changed[i]); </span></div><div class="line">			f++;</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	*f = <span class="string">'\0'</span>;</div><div class="line"></div><div class="line">	<span class="keyword">return</span> ret;</div><div class="line"></div><div class="line">&#125;</div><div class="line"><span class="comment">/* */</span></div><div class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">char</span> <span class="title">find_pos</span><span class="params">(<span class="keyword">char</span> ch)</span></span></div><div class="line">&#123;</div><div class="line">	<span class="keyword">char</span> *ptr = (<span class="keyword">char</span>*)<span class="built_in">strrchr</span>(base, ch);<span class="comment">//the last position (the only) in base[] </span></div><div class="line">	<span class="keyword">return</span> (ptr - base);</div><div class="line">&#125;</div><div class="line"><span class="comment">/* */</span></div><div class="line"><span class="function"><span class="keyword">char</span> *<span class="title">base64_decode</span><span class="params">(<span class="keyword">const</span> <span class="keyword">char</span> *data, <span class="keyword">int</span> data_len)</span></span></div><div class="line">&#123;</div><div class="line">	<span class="keyword">int</span> ret_len = (data_len / <span class="number">4</span>) * <span class="number">3</span>;</div><div class="line">	<span class="keyword">int</span> equal_count = <span class="number">0</span>;</div><div class="line">	<span class="keyword">char</span> *ret = <span class="literal">NULL</span>;</div><div class="line">	<span class="keyword">char</span> *f = <span class="literal">NULL</span>;</div><div class="line">	<span class="keyword">int</span> tmp = <span class="number">0</span>;</div><div class="line">	<span class="keyword">int</span> temp = <span class="number">0</span>;</div><div class="line">	<span class="keyword">char</span> need[<span class="number">3</span>];</div><div class="line">	<span class="keyword">int</span> prepare = <span class="number">0</span>;</div><div class="line">	<span class="keyword">int</span> i = <span class="number">0</span>;</div><div class="line">	<span class="keyword">if</span> (*(data + data_len - <span class="number">1</span>) == <span class="string">'='</span>)</div><div class="line">	&#123;</div><div class="line">		equal_count += <span class="number">1</span>;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">if</span> (*(data + data_len - <span class="number">2</span>) == <span class="string">'='</span>)</div><div class="line">	&#123;</div><div class="line">		equal_count += <span class="number">1</span>;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">if</span> (*(data + data_len - <span class="number">3</span>) == <span class="string">'='</span>)</div><div class="line">	&#123;<span class="comment">//seems impossible </span></div><div class="line">		equal_count += <span class="number">1</span>;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">switch</span> (equal_count)</div><div class="line">	&#123;</div><div class="line">	<span class="keyword">case</span> <span class="number">0</span>:</div><div class="line">		ret_len += <span class="number">4</span>;<span class="comment">//3 + 1 [1 for NULL] </span></div><div class="line">		<span class="keyword">break</span>;</div><div class="line">	<span class="keyword">case</span> <span class="number">1</span>:</div><div class="line">		ret_len += <span class="number">4</span>;<span class="comment">//Ceil((6*3)/8)+1 </span></div><div class="line">		<span class="keyword">break</span>;</div><div class="line">	<span class="keyword">case</span> <span class="number">2</span>:</div><div class="line">		ret_len += <span class="number">3</span>;<span class="comment">//Ceil((6*2)/8)+1 </span></div><div class="line">		<span class="keyword">break</span>;</div><div class="line">	<span class="keyword">case</span> <span class="number">3</span>:</div><div class="line">		ret_len += <span class="number">2</span>;<span class="comment">//Ceil((6*1)/8)+1 </span></div><div class="line">		<span class="keyword">break</span>;</div><div class="line">	&#125;</div><div class="line">	ret = (<span class="keyword">char</span> *)<span class="built_in">malloc</span>(ret_len);</div><div class="line">	<span class="keyword">if</span> (ret == <span class="literal">NULL</span>)</div><div class="line">	&#123;</div><div class="line">		<span class="built_in">printf</span>(<span class="string">"No enough memory.\n"</span>);</div><div class="line">		<span class="built_in">exit</span>(<span class="number">0</span>);</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">memset</span>(ret, <span class="number">0</span>, ret_len);</div><div class="line">	f = ret;</div><div class="line">	<span class="keyword">while</span> (tmp &lt; (data_len - equal_count))</div><div class="line">	&#123;</div><div class="line">		temp = <span class="number">0</span>;</div><div class="line">		prepare = <span class="number">0</span>;</div><div class="line">		<span class="built_in">memset</span>(need, <span class="number">0</span>, <span class="number">3</span>);</div><div class="line">		<span class="keyword">while</span> (temp &lt; <span class="number">4</span>)</div><div class="line">		&#123;</div><div class="line">			<span class="keyword">if</span> (tmp &gt;= (data_len - equal_count))</div><div class="line">			&#123;</div><div class="line">				<span class="keyword">break</span>;</div><div class="line">			&#125;</div><div class="line">			prepare = (prepare &lt;&lt; <span class="number">6</span>) | (find_pos(data[tmp]));</div><div class="line">			temp++;</div><div class="line">			tmp++;</div><div class="line">		&#125;</div><div class="line">		prepare = prepare &lt;&lt; ((<span class="number">4</span> - temp) * <span class="number">6</span>);</div><div class="line">		<span class="keyword">for</span> (i = <span class="number">0</span>; i&lt;<span class="number">3</span>; i++)</div><div class="line">		&#123;</div><div class="line">			<span class="keyword">if</span> (i == temp)</div><div class="line">			&#123;</div><div class="line">				<span class="keyword">break</span>;</div><div class="line">			&#125;</div><div class="line">			*f = (<span class="keyword">char</span>)((prepare &gt;&gt; ((<span class="number">2</span> - i) * <span class="number">8</span>)) &amp; <span class="number">0xFF</span>);</div><div class="line">			f++;</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	*f = <span class="string">'\0'</span>;</div><div class="line">	<span class="keyword">return</span> ret;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;先声明一下这其中编码解码的算法部分不是我手打的，是参考现有的程序。&lt;br&gt;该代码编译后可直接运行，亦可带参运行，程序内有提示。&lt;br&gt;有时间我会把它做成PHP版，那就更方便了。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;main.c&lt;/p&gt;
&lt;/blockquote&gt;
&lt;fi
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>一些我喜欢用的 Chrome (Chromium) 扩展</title>
    <link href="http://blog.cosimahan.com/%E4%B8%80%E4%BA%9B%E6%88%91%E5%96%9C%E6%AC%A2%E7%94%A8%E7%9A%84Chrome%E6%89%A9%E5%B1%95.html"/>
    <id>http://blog.cosimahan.com/一些我喜欢用的Chrome扩展.html</id>
    <published>2016-03-25T12:42:28.000Z</published>
    <updated>2016-08-16T06:36:44.845Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Adblock-Plus"><a href="#Adblock-Plus" class="headerlink" title="Adblock Plus"></a>Adblock Plus</h2><p>把它列在第一好像不是那么好，毕竟不少网站可是靠广告收入的维持的，可是我实在不想看到那些下三滥的广告了。这款插件功能确实不错，同时也可以屏蔽追踪（理论上），easylist 加自定义屏蔽对我已经够用了。</p>
<h2 id="Vimium"><a href="#Vimium" class="headerlink" title="Vimium"></a>Vimium</h2><p>神器，将 Vim 的控制方式带到 Chromium ，浏览网页基本无需鼠标。</p>
<h2 id="划词翻译"><a href="#划词翻译" class="headerlink" title="划词翻译"></a>划词翻译</h2><p>很方便的翻译插件，词汇量低者的福音。</p>
<h2 id="Google-Mail-Checker"><a href="#Google-Mail-Checker" class="headerlink" title="Google Mail Checker"></a>Google Mail Checker</h2><p>它能显示未读邮件数，还能快速进入邮箱。</p>
<h2 id="网易邮箱"><a href="#网易邮箱" class="headerlink" title="网易邮箱"></a>网易邮箱</h2><p>功能基本同 Google Mail Checker，只是邮箱服务商变成了网易。</p>
<h2 id="Chrome-Sniffer-Plus"><a href="#Chrome-Sniffer-Plus" class="headerlink" title="Chrome Sniffer Plus"></a>Chrome Sniffer Plus</h2><p>“探测当前网页正在使用的开源软件或者js类库，web开发者必备神器。”</p>
<h2 id="Proxy-SwitchyOmega"><a href="#Proxy-SwitchyOmega" class="headerlink" title="Proxy SwitchyOmega"></a>Proxy SwitchyOmega</h2><p>“轻松快捷地管理和切换多个代理设置。”</p>
<h2 id="crxMouse-Chrome-Gestures"><a href="#crxMouse-Chrome-Gestures" class="headerlink" title="crxMouse Chrome Gestures"></a>crxMouse Chrome Gestures</h2><p>鼠标手势插件，其实我用的不多，毕竟键盘更快。</p>
<h2 id="EditThisCookie"><a href="#EditThisCookie" class="headerlink" title="EditThisCookie"></a>EditThisCookie</h2><p>这是一个cookie管理器，能添加，删除，编辑，搜索，锁定和屏蔽cookies。</p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Adblock-Plus&quot;&gt;&lt;a href=&quot;#Adblock-Plus&quot; class=&quot;headerlink&quot; title=&quot;Adblock Plus&quot;&gt;&lt;/a&gt;Adblock Plus&lt;/h2&gt;&lt;p&gt;把它列在第一好像不是那么好，毕竟不少网站可是靠广告收入的维持
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>将博客在Coding上部署了一份</title>
    <link href="http://blog.cosimahan.com/%E5%B0%86%E5%8D%9A%E5%AE%A2%E5%9C%A8Coding%E4%B8%8A%E9%83%A8%E7%BD%B2%E4%BA%86%E4%B8%80%E4%BB%BD.html"/>
    <id>http://blog.cosimahan.com/将博客在Coding上部署了一份.html</id>
    <published>2016-03-18T12:42:28.000Z</published>
    <updated>2016-08-16T06:36:44.863Z</updated>
    
    <content type="html"><![CDATA[<p>我这博客一直是放在 GitHub Pages 上的，最近博客出了点问题，我也不知道到底咋回事，只是怀疑是 GitHub Pages 在大陆的线路问题导致的。<br>正巧我看到了另一个类似平台的类似服务： Coding Pages ，也支持域名绑定，试了下大陆访问速度还不错，便在 Coding 上也部署了一份博客，用来承担来自大陆的访问。<br>部署还是挺方便，建一个跟用户名一样的项目，把本地的 force push 进去，开启 Coding Pages ，这便部署完成。<br>测试过之后，将域名在国内的解析 CNAME 到 Coding 给你的域名，完工。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;我这博客一直是放在 GitHub Pages 上的，最近博客出了点问题，我也不知道到底咋回事，只是怀疑是 GitHub Pages 在大陆的线路问题导致的。&lt;br&gt;正巧我看到了另一个类似平台的类似服务： Coding Pages ，也支持域名绑定，试了下大陆访问速度还不错，
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>C++类内成员访问控制中一个容易忽略的地方</title>
    <link href="http://blog.cosimahan.com/C++%E7%B1%BB%E5%86%85%E6%88%90%E5%91%98%E8%AE%BF%E9%97%AE%E6%8E%A7%E5%88%B6%E4%B8%AD%E4%B8%80%E4%B8%AA%E5%AE%B9%E6%98%93%E5%BF%BD%E7%95%A5%E7%9A%84%E5%9C%B0%E6%96%B9.html"/>
    <id>http://blog.cosimahan.com/C++类内成员访问控制中一个容易忽略的地方.html</id>
    <published>2016-02-03T03:10:42.000Z</published>
    <updated>2016-08-16T06:36:44.828Z</updated>
    
    <content type="html"><![CDATA[<p>今天看到了运算符重载，在动手实践的过程中遇到了一个疑惑。</p>
<blockquote>
<p>main.cpp</p>
</blockquote>
<figure class="highlight swift"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">c</span></span>&#123;</div><div class="line">    	</div><div class="line">    	<span class="keyword">private</span>:</div><div class="line">    		int a,b;</div><div class="line">    	<span class="keyword">public</span>:</div><div class="line">    		<span class="built_in">c</span>(void)&#123;</div><div class="line">	            a=b=<span class="number">2</span>;</div><div class="line">            &#125;</div><div class="line">    		<span class="built_in">c</span>(int)&#123;</div><div class="line">            	a = <span class="keyword">in</span>; b = <span class="number">1</span>;</div><div class="line">            &#125;</div><div class="line">    		</div><div class="line">			<span class="built_in">c</span> <span class="keyword">operator</span>+(<span class="built_in">c</span> cadd)&#123;</div><div class="line">	            <span class="built_in">c</span> csum;</div><div class="line">	            csum.a = a + cadd.a;</div><div class="line">	            csum.b = b + cadd.b;</div><div class="line">            	<span class="keyword">return</span> csum;</div><div class="line">            &#125;</div><div class="line">		</div><div class="line"> &#125;;</div></pre></td></tr></table></figure>
<p>在这段代码中，14行新建了一个对象，为何在15和16行中能直接访问其私有成员呢，这不是在对象外么。<br>经过查找资料，结果如下：</p>
<blockquote>
<p>A member of a class can be<br>— private; that is, its name can be used only by members and friends of the class in which it is<br>declared.<br>— protected; that is, its name can be used only by members and friends of the class in which it is<br>declared, and by members and friends of classes derived from this class (see 11.5).<br>— public; that is, its name can be used anywhere without access restriction.</p>
</blockquote>
<p>就是说，访问限制是针对于类的，而不是针对于对象的。<br>类的对象在类的内部默认是友元，同一个类的不同对象可以互相访问其私有成员，而不属于这个类的其他对象和函数才不能访问其私有成员。<br>原来我一直理解有误，认为访问控制针对于对象，这样是错的。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;今天看到了运算符重载，在动手实践的过程中遇到了一个疑惑。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;main.cpp&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>关于WEB服务器的安全问题（LAMP）</title>
    <link href="http://blog.cosimahan.com/%E5%85%B3%E4%BA%8EWEB%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%9A%84%E5%AE%89%E5%85%A8%E9%97%AE%E9%A2%98%EF%BC%88LAMP%EF%BC%89.html"/>
    <id>http://blog.cosimahan.com/关于WEB服务器的安全问题（LAMP）.html</id>
    <published>2015-12-01T01:10:56.000Z</published>
    <updated>2016-08-16T06:36:44.854Z</updated>
    
    <content type="html"><![CDATA[<p>  近期接触了不少关于网站的东西，也学到了不少东西，简单记录下如何保障 LAMP 架构下 WEB 服务器的安全问题。<br>  首先服务器肯定不能直接暴露在公网，要不所有开放的端口会被人扫个遍，这中间起码要有个路由器之类的做端口转发或者另一台服务器做反代，SSH 等远程管理端口也要设好IP范围。<br>  还有就是 Apache 的设置问题，给它单独开个用户和组，权限设置好（好像这个它自己会做），开 safe_mode ，禁止某些函数，只允许访问指定目录，禁止列举文件，允许上传的目录禁止执行等等。<br>  文件和目录的权限正常来说目录用 755 或 775 ，文件用 644 或 664。<br>  再就是数据库，也给它单独开个用户和组，权限设置好，设置好允许访问的IP范围，删掉没用的root账户，一个应用一个数据库账户，只允许操作这个应用自己的数据库。<br>  最后是 PHP，做好输入过滤，前端加了限制之后后端还要再次过滤。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;  近期接触了不少关于网站的东西，也学到了不少东西，简单记录下如何保障 LAMP 架构下 WEB 服务器的安全问题。&lt;br&gt;  首先服务器肯定不能直接暴露在公网，要不所有开放的端口会被人扫个遍，这中间起码要有个路由器之类的做端口转发或者另一台服务器做反代，SSH 等远程管理
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>关于快速省力地在纸质材料上实现手写字迹的研究</title>
    <link href="http://blog.cosimahan.com/%E5%85%B3%E4%BA%8E%E5%BF%AB%E9%80%9F%E7%9C%81%E5%8A%9B%E5%9C%B0%E5%9C%A8%E7%BA%B8%E8%B4%A8%E6%9D%90%E6%96%99%E4%B8%8A%E5%AE%9E%E7%8E%B0%E6%89%8B%E5%86%99%E5%AD%97%E8%BF%B9%E7%9A%84%E7%A0%94%E7%A9%B6.html"/>
    <id>http://blog.cosimahan.com/关于快速省力地在纸质材料上实现手写字迹的研究.html</id>
    <published>2015-11-13T10:37:08.000Z</published>
    <updated>2016-08-16T06:36:44.860Z</updated>
    
    <content type="html"><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a><center>摘要</center></h2><p>（略）</p>
<h2 id="关键字"><a href="#关键字" class="headerlink" title="关键字"></a><center>关键字</center></h2><p>手写 打印</p>
<h2 id="正文"><a href="#正文" class="headerlink" title="正文"></a><center>正文</center></h2><p><strong>选题依据、研究背景与研究意义：</strong><br>&nbsp;&nbsp;&nbsp;&nbsp;总有一些看起来浪费时间的事情，其中一些便是现在无聊课程要求的手写作业了。本研究的目的旨在使人们从这种毫无意义的重复劳动中解放出来，节省宝贵的时间和精力用于码代码。<br><strong>研究现状：</strong><br>&nbsp;&nbsp;&nbsp;&nbsp;自二十世纪后期电脑打印得到应用以来，打印技术不断发展，激光打印、喷墨打印等已经普及，现在普通打印机打印的质量已经相当不错，成本也相对低廉。<br>&nbsp;&nbsp;&nbsp;&nbsp;如今的中文字体早已不单单仅有宋体黑体等传统字体，各种艺术体、手写体更是百花齐放。<br><strong>研究方法：</strong><br>&nbsp;&nbsp;&nbsp;&nbsp;以我的思想为指导，通过对相关研究现状的分析，得出实现目标的可行理论方案和实际解决方案。<br><strong>可行理论方案</strong><br>考虑成本和质量，故采用电脑打印技术比较可行；考虑因特网的方便和自由，故使用网络上手写体字体比较可行。<br><strong>实际解决方案</strong></p>
<ol>
<li>寻找一款合适的手写字体，由于版权原因我也不好挂下载链接，自行搜索即可；</li>
<li>用这款字体在Word等文字工具中写好（或者复制粘贴好）你要写的东西；</li>
<li>打印：<br>3.1. 如果你选的字体中每个字大小比较一致的话，在没有线/格子的纸上打印会使字看起来太整齐；<br>3.2. 在有线的纸上只需算好行间距和页边距，行间距可以用尺子量后换算成磅；<br>3.3. 在格子纸上要保证每个字符（汉字、标点等）大小一致；</li>
<li>适当的涂改会增加真实性。</li>
</ol>
<p><strong>研究成果</strong><br><img src="http://7u2p8s.com1.z0.glb.clouddn.com/blog/img/2015/11/0.jpg" alt=""></p>
<h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a><center>参考文献</center></h2><p>维基百科-互联网<br>字体网站-互联网</p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;摘要&quot;&gt;&lt;a href=&quot;#摘要&quot; class=&quot;headerlink&quot; title=&quot;摘要&quot;&gt;&lt;/a&gt;&lt;center&gt;摘要&lt;/center&gt;&lt;/h2&gt;&lt;p&gt;（略）&lt;/p&gt;
&lt;h2 id=&quot;关键字&quot;&gt;&lt;a href=&quot;#关键字&quot; class=&quot;headerlink
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>做了一个小东西</title>
    <link href="http://blog.cosimahan.com/%E5%81%9A%E4%BA%86%E4%B8%80%E4%B8%AA%E5%B0%8F%E4%B8%9C%E8%A5%BF.html"/>
    <id>http://blog.cosimahan.com/做了一个小东西.html</id>
    <published>2015-09-11T00:37:08.000Z</published>
    <updated>2016-08-16T06:36:44.853Z</updated>
    
    <content type="html"><![CDATA[<p>用PHP写的一个简单的工具，功能是计算/验证身份证号码的最后一位和IMEI号码的最后一位。<br>源代码如下：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;!doctype html&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">align</span>=<span class="string">"center"</span>&gt;</span></div><div class="line">  <span class="php"><span class="meta">&lt;?php</span></span></div><div class="line">	<span class="keyword">if</span>(<span class="keyword">isset</span>($_POST[submit]))&#123;</div><div class="line">		<span class="comment">//echo "YOUR INPUT IS:".$_POST[input].'&lt;br&gt;';</span></div><div class="line">		<span class="comment">//echo "LENGTH IS ".strlen($_POST[input])."&lt;br&gt;";</span></div><div class="line">		<span class="keyword">if</span>(strlen($_POST[input])==<span class="number">17</span>||strlen($_POST[input])==<span class="number">18</span>)&#123;</div><div class="line">			$s=(($_POST[input][<span class="number">0</span>] - <span class="string">'0'</span>) * <span class="number">7</span> + ($_POST[input][<span class="number">1</span>] - <span class="string">'0'</span>) * <span class="number">9</span> + ($_POST[input][<span class="number">2</span>] - <span class="string">'0'</span>) * <span class="number">10</span> + ($_POST[input][<span class="number">3</span>] - <span class="string">'0'</span>) * <span class="number">5</span> + ($_POST[input][<span class="number">4</span>] - <span class="string">'0'</span>) * <span class="number">8</span> + ($_POST[input][<span class="number">5</span>] - <span class="string">'0'</span>) * <span class="number">4</span> + ($_POST[input][<span class="number">6</span>] - <span class="string">'0'</span>) * <span class="number">2</span> + ($_POST[input][<span class="number">7</span>] - <span class="string">'0'</span>) * <span class="number">1</span> + ($_POST[input][<span class="number">8</span>] - <span class="string">'0'</span>) * <span class="number">6</span> + ($_POST[input][<span class="number">9</span>] - <span class="string">'0'</span>) * <span class="number">3</span> + ($_POST[input][<span class="number">10</span>] - <span class="string">'0'</span>) * <span class="number">7</span> + ($_POST[input][<span class="number">11</span>] - <span class="string">'0'</span>) * <span class="number">9</span> + ($_POST[input][<span class="number">12</span>] - <span class="string">'0'</span>) * <span class="number">10</span> + ($_POST[input][<span class="number">13</span>] - <span class="string">'0'</span>) * <span class="number">5</span> + ($_POST[input][<span class="number">14</span>] - <span class="string">'0'</span>) * <span class="number">8</span> + ($_POST[input][<span class="number">15</span>] - <span class="string">'0'</span>) * <span class="number">4</span> + ($_POST[input][<span class="number">16</span>] - <span class="string">'0'</span>) * <span class="number">2</span>)%<span class="number">11</span>;</div><div class="line">			<span class="keyword">echo</span> <span class="string">'THE LAST ONE SHOULD BE :'</span>;</div><div class="line">			<span class="keyword">if</span>($s==<span class="number">10</span>)<span class="keyword">echo</span> <span class="string">'X'</span>;</div><div class="line">			<span class="keyword">else</span> <span class="keyword">echo</span> $s;</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">elseif</span>(strlen($_POST[input])==<span class="number">15</span>||strlen($_POST[input])==<span class="number">14</span>)&#123;</div><div class="line">				$s=($_POST[input][<span class="number">0</span>] - <span class="string">'0'</span>)+(($_POST[input][<span class="number">1</span>] - <span class="string">'0'</span>) * <span class="number">2</span> )%<span class="number">10</span>+(int)((($_POST[input][<span class="number">1</span>] - <span class="string">'0'</span>) * <span class="number">2</span>)/<span class="number">10</span>)+($_POST[input][<span class="number">2</span>] - <span class="string">'0'</span>)+(($_POST[input][<span class="number">3</span>] - <span class="string">'0'</span>) * <span class="number">2</span> )%<span class="number">10</span>+(int)((($_POST[input][<span class="number">3</span>] - <span class="string">'0'</span>) * <span class="number">2</span>)/<span class="number">10</span>)+($_POST[input][<span class="number">4</span>] - <span class="string">'0'</span>)+(($_POST[input][<span class="number">5</span>] - <span class="string">'0'</span>) * <span class="number">2</span> )%<span class="number">10</span>+(int)((($_POST[input][<span class="number">5</span>] - <span class="string">'0'</span>) * <span class="number">2</span>)/<span class="number">10</span>)+($_POST[input][<span class="number">6</span>] - <span class="string">'0'</span>)+(($_POST[input][<span class="number">7</span>] - <span class="string">'0'</span>) * <span class="number">2</span> )%<span class="number">10</span>+(int)((($_POST[input][<span class="number">7</span>] - <span class="string">'0'</span>) * <span class="number">2</span>)/<span class="number">10</span>)+($_POST[input][<span class="number">8</span>] - <span class="string">'0'</span>)+(($_POST[input][<span class="number">9</span>] - <span class="string">'0'</span>) * <span class="number">2</span> )%<span class="number">10</span>+(int)((($_POST[input][<span class="number">9</span>] - <span class="string">'0'</span>) * <span class="number">2</span>)/<span class="number">10</span>)+($_POST[input][<span class="number">10</span>] - <span class="string">'0'</span>)+(($_POST[input][<span class="number">11</span>] - <span class="string">'0'</span>) * <span class="number">2</span> )%<span class="number">10</span>+(int)((($_POST[input][<span class="number">11</span>] - <span class="string">'0'</span>) * <span class="number">2</span>)/<span class="number">10</span>)+($_POST[input][<span class="number">12</span>] - <span class="string">'0'</span>)+(($_POST[input][<span class="number">13</span>] - <span class="string">'0'</span>) * <span class="number">2</span> )%<span class="number">10</span>+(int)((($_POST[input][<span class="number">13</span>] - <span class="string">'0'</span>) * <span class="number">2</span>)/<span class="number">10</span>);</div><div class="line">				<span class="comment">//echo "---".$s."---";</span></div><div class="line">				$s=<span class="number">10</span>-$s%<span class="number">10</span>;</div><div class="line">				<span class="keyword">echo</span> <span class="string">'THE LAST ONE SHOULD BE :'</span>;</div><div class="line">				<span class="keyword">if</span>($s==<span class="number">10</span>)<span class="keyword">echo</span> <span class="string">'0'</span>;</div><div class="line">				<span class="keyword">else</span> <span class="keyword">echo</span> $s;</div><div class="line">			&#125;</div><div class="line">	&#125;</div><div class="line"></div><div class="line"><span class="meta">?&gt;</span></div><div class="line">  </div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">""</span> <span class="attr">method</span>=<span class="string">"post"</span> <span class="attr">name</span>=<span class="string">"form1"</span> <span class="attr">id</span>=<span class="string">"form1"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"textfield"</span>&gt;</span><span class="tag">&lt;/<span class="name">label</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">p</span> <span class="attr">align</span>=<span class="string">"center"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"input"</span> <span class="attr">id</span>=<span class="string">"input"</span> <span class="attr">maxlength</span>=<span class="string">"18"</span> <span class="attr">value</span>=<span class="string">"&lt;?php if(isset($_POST[submit]))&#123;echo $_POST[input];&#125;?&gt;"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">p</span> <span class="attr">align</span>=<span class="string">"center"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">name</span>=<span class="string">"submit"</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">id</span>=<span class="string">"submit"</span> <span class="attr">form</span>=<span class="string">"form1"</span> <span class="attr">value</span>=<span class="string">"&lt;?php if(isset($_POST[submit]))&#123;echo "</span><span class="attr">Again</span>";&#125;<span class="attr">else</span>&#123;<span class="attr">echo</span> "<span class="attr">Do</span>";&#125;?&gt;</span>"&gt;</div><div class="line">  <span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;用PHP写的一个简单的工具，功能是计算/验证身份证号码的最后一位和IMEI号码的最后一位。&lt;br&gt;源代码如下：&lt;br&gt;&lt;figure class=&quot;highlight xml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;l
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>把博客从 WordPress 转移到了 Hexo</title>
    <link href="http://blog.cosimahan.com/%E6%8A%8A%E5%8D%9A%E5%AE%A2%E4%BB%8E%20WordPress%20%E8%BD%AC%E7%A7%BB%E5%88%B0%E4%BA%86%20Hexo.html"/>
    <id>http://blog.cosimahan.com/把博客从 WordPress 转移到了 Hexo.html</id>
    <published>2015-08-02T08:32:06.000Z</published>
    <updated>2016-08-16T06:36:44.870Z</updated>
    
    <content type="html"><![CDATA[<p>虽然WordPress是也很优秀的，不过我想换一换口味，便选择了 Hexo，它简单纯粹，静态网页还可以托管在 github page 上。<br>迁移也是方便，用插件几条命令就搞定了，找了个自认为不错的主题，匆匆忙忙就完工了。<br>还有顺手把图片啥的都放在的七牛上，感觉不错。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;虽然WordPress是也很优秀的，不过我想换一换口味，便选择了 Hexo，它简单纯粹，静态网页还可以托管在 github page 上。&lt;br&gt;迁移也是方便，用插件几条命令就搞定了，找了个自认为不错的主题，匆匆忙忙就完工了。&lt;br&gt;还有顺手把图片啥的都放在的七牛上，感觉不
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>拿51单片机做了个表</title>
    <link href="http://blog.cosimahan.com/%E6%8B%BF51%E5%8D%95%E7%89%87%E6%9C%BA%E5%81%9A%E4%BA%86%E4%B8%AA%E8%A1%A8.html"/>
    <id>http://blog.cosimahan.com/拿51单片机做了个表.html</id>
    <published>2015-07-06T03:50:24.000Z</published>
    <updated>2016-08-16T06:36:44.878Z</updated>
    
    <content type="html"><![CDATA[<p>基于STC12C5A60S2单片机，共使用6个按键、12位共阳数码管、4LED灯加一有源头蜂鸣器，按键占用一组I/O口，数码管、LED灯与蜂鸣器公用三组IO口。分两个板子，其实设计的也不怎么好，还有一些飞线，电路图和pcb图如下：<br><img src="http://7u2p8s.com1.z0.glb.clouddn.com/blog/img/2015/07/1-1.png" alt=""><br><img src="http://7u2p8s.com1.z0.glb.clouddn.com/blog/img/2015/07/1-2.png" alt=""><br><img src="http://7u2p8s.com1.z0.glb.clouddn.com/blog/img/2015/07/2-1.png" alt=""><br><img src="http://7u2p8s.com1.z0.glb.clouddn.com/blog/img/2015/07/2-2.png" alt=""> </p>
<p>代码如下</p>
<blockquote>
<p>main.c<br><figure class="highlight nix"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div><div class="line">148</div><div class="line">149</div><div class="line">150</div><div class="line">151</div><div class="line">152</div><div class="line">153</div><div class="line">154</div><div class="line">155</div><div class="line">156</div><div class="line">157</div><div class="line">158</div><div class="line">159</div><div class="line">160</div><div class="line">161</div><div class="line">162</div><div class="line">163</div><div class="line">164</div><div class="line">165</div><div class="line">166</div><div class="line">167</div><div class="line">168</div><div class="line">169</div><div class="line">170</div><div class="line">171</div><div class="line">172</div><div class="line">173</div><div class="line">174</div><div class="line">175</div><div class="line">176</div><div class="line">177</div><div class="line">178</div><div class="line">179</div><div class="line">180</div><div class="line">181</div><div class="line">182</div><div class="line">183</div><div class="line">184</div><div class="line">185</div><div class="line">186</div><div class="line">187</div><div class="line">188</div><div class="line">189</div><div class="line">190</div><div class="line">191</div><div class="line">192</div><div class="line">193</div><div class="line">194</div><div class="line">195</div><div class="line">196</div><div class="line">197</div><div class="line">198</div><div class="line">199</div><div class="line">200</div><div class="line">201</div><div class="line">202</div><div class="line">203</div><div class="line">204</div><div class="line">205</div><div class="line">206</div><div class="line">207</div><div class="line">208</div><div class="line">209</div><div class="line">210</div><div class="line">211</div><div class="line">212</div><div class="line">213</div><div class="line">214</div><div class="line">215</div><div class="line">216</div><div class="line">217</div><div class="line">218</div><div class="line">219</div><div class="line">220</div><div class="line">221</div><div class="line">222</div><div class="line">223</div><div class="line">224</div><div class="line">225</div><div class="line">226</div><div class="line">227</div><div class="line">228</div><div class="line">229</div><div class="line">230</div><div class="line">231</div><div class="line">232</div><div class="line">233</div><div class="line">234</div><div class="line">235</div><div class="line">236</div><div class="line">237</div><div class="line">238</div><div class="line">239</div><div class="line">240</div><div class="line">241</div><div class="line">242</div><div class="line">243</div><div class="line">244</div><div class="line">245</div><div class="line">246</div><div class="line">247</div><div class="line">248</div><div class="line">249</div><div class="line">250</div><div class="line">251</div><div class="line">252</div><div class="line">253</div><div class="line">254</div><div class="line">255</div><div class="line">256</div><div class="line">257</div><div class="line">258</div><div class="line">259</div><div class="line">260</div><div class="line">261</div><div class="line">262</div><div class="line">263</div><div class="line">264</div><div class="line">265</div><div class="line">266</div><div class="line">267</div><div class="line">268</div><div class="line">269</div><div class="line">270</div><div class="line">271</div><div class="line">272</div><div class="line">273</div><div class="line">274</div><div class="line">275</div><div class="line">276</div><div class="line">277</div><div class="line">278</div><div class="line">279</div><div class="line">280</div><div class="line">281</div><div class="line">282</div><div class="line">283</div><div class="line">284</div><div class="line">285</div><div class="line">286</div><div class="line">287</div><div class="line">288</div><div class="line">289</div><div class="line">290</div><div class="line">291</div><div class="line">292</div><div class="line">293</div><div class="line">294</div><div class="line">295</div><div class="line">296</div><div class="line">297</div><div class="line">298</div><div class="line">299</div><div class="line">300</div><div class="line">301</div><div class="line">302</div><div class="line">303</div><div class="line">304</div><div class="line">305</div><div class="line">306</div><div class="line">307</div><div class="line">308</div><div class="line">309</div><div class="line">310</div><div class="line">311</div><div class="line">312</div><div class="line">313</div><div class="line">314</div><div class="line">315</div><div class="line">316</div><div class="line">317</div><div class="line">318</div><div class="line">319</div><div class="line">320</div><div class="line">321</div><div class="line">322</div><div class="line">323</div><div class="line">324</div><div class="line">325</div><div class="line">326</div><div class="line">327</div><div class="line">328</div><div class="line">329</div><div class="line">330</div><div class="line">331</div><div class="line">332</div><div class="line">333</div><div class="line">334</div><div class="line">335</div><div class="line">336</div><div class="line">337</div><div class="line">338</div><div class="line">339</div><div class="line">340</div><div class="line">341</div><div class="line">342</div><div class="line">343</div><div class="line">344</div><div class="line">345</div><div class="line">346</div><div class="line">347</div><div class="line">348</div><div class="line">349</div><div class="line">350</div><div class="line">351</div><div class="line">352</div><div class="line">353</div><div class="line">354</div><div class="line">355</div><div class="line">356</div><div class="line">357</div><div class="line">358</div><div class="line">359</div><div class="line">360</div><div class="line">361</div><div class="line">362</div><div class="line">363</div><div class="line">364</div><div class="line">365</div><div class="line">366</div><div class="line">367</div><div class="line">368</div><div class="line">369</div><div class="line">370</div><div class="line">371</div><div class="line">372</div><div class="line">373</div><div class="line">374</div><div class="line">375</div><div class="line">376</div><div class="line">377</div><div class="line">378</div><div class="line">379</div><div class="line">380</div><div class="line">381</div><div class="line">382</div><div class="line">383</div><div class="line">384</div><div class="line">385</div><div class="line">386</div><div class="line">387</div><div class="line">388</div><div class="line">389</div><div class="line">390</div><div class="line">391</div><div class="line">392</div><div class="line">393</div><div class="line">394</div><div class="line">395</div><div class="line">396</div><div class="line">397</div><div class="line">398</div><div class="line">399</div><div class="line">400</div><div class="line">401</div><div class="line">402</div><div class="line">403</div><div class="line">404</div><div class="line">405</div><div class="line">406</div><div class="line">407</div><div class="line">408</div><div class="line">409</div><div class="line">410</div><div class="line">411</div><div class="line">412</div><div class="line">413</div><div class="line">414</div><div class="line">415</div><div class="line">416</div><div class="line">417</div><div class="line">418</div><div class="line">419</div><div class="line">420</div><div class="line">421</div><div class="line">422</div><div class="line">423</div><div class="line">424</div><div class="line">425</div><div class="line">426</div><div class="line">427</div><div class="line">428</div><div class="line">429</div><div class="line">430</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"><span class="comment">#include"ch1.h";</span></div><div class="line"><span class="comment">#define uint unsigned int</span></div><div class="line"><span class="comment">#define uchar unsigned char</span></div><div class="line"><span class="comment">#define Pa P0//1-8</span></div><div class="line"><span class="comment">#define Pb P3//tx,rx,6keys</span></div><div class="line"><span class="comment">#define Pc P2//a-h</span></div><div class="line"><span class="comment">#define Pd P1//9-12,led,beep..</span></div><div class="line"></div><div class="line">sbit <span class="attr">bk0=Pb^0;sbit</span> <span class="attr">bk1=Pb^1;sbit</span> <span class="attr">bk2=Pb^2;sbit</span> <span class="attr">bk3=Pb^3;sbit</span> <span class="attr">bk4=Pb^4;sbit</span> <span class="attr">bk5=Pb^5;sbit</span> <span class="attr">bk6=Pb^6;sbit</span> <span class="attr">bk7=Pb^7;//bk:Pb's</span> Keys</div><div class="line">sbit <span class="attr">led=Pd^4;sbit</span> <span class="attr">beep=Pd^5;</span></div><div class="line">uint i,t,p,<span class="attr">num0=0,sec=0,minu=0,hour=0,day=1,mon=1,year=2015,num[12]=&#123;0&#125;,k=0,kl=0,s=0,ii=0,in[7]=&#123;0&#125;;</span></div><div class="line">xdata uint <span class="attr">ahour=18,aminu=0,ring=0,alarm=0,ka=0;</span></div><div class="line">code uint <span class="built_in">map</span>[]=&#123;<span class="number">0</span>xC0,<span class="number">0</span>xF9,<span class="number">0</span>xA4,<span class="number">0</span>xB0,<span class="number">0</span>x99,<span class="number">0</span>x92,<span class="number">0</span>x82,<span class="number">0</span>xF8,<span class="number">0</span>x80,<span class="number">0</span>x98,<span class="number">0</span>xBF,<span class="number">0</span>xFF,<span class="number">0</span>xA3,<span class="number">0</span>xAB,<span class="number">0</span>x8E&#125;,dm[<span class="number">13</span>]=&#123;<span class="number">0</span>,<span class="number">31</span>,<span class="number">28</span>,<span class="number">31</span>,<span class="number">30</span>,<span class="number">31</span>,<span class="number">30</span>,<span class="number">31</span>,<span class="number">31</span>,<span class="number">30</span>,<span class="number">31</span>,<span class="number">30</span>,<span class="number">31</span>&#125;;//<span class="built_in">map</span>:<span class="number">0123456789</span>-(<span class="literal">null</span>)onf</div><div class="line"></div><div class="line">uint md()&#123;</div><div class="line">	<span class="comment">/*</span></div><div class="line">								if(mon==1||mon==3||mon==5||mon==7||mon==8||mon==10||mon==12)return(31);</div><div class="line">								else if(mon==4||mon==6||mon==9||mon==11)return(30);</div><div class="line">										 else if(mon==2&amp;amp;&amp;amp;year%4==0&amp;amp;&amp;amp;(year%100!=0||year%400==0))return(29);</div><div class="line">													else return(28);</div><div class="line">	*/</div><div class="line"></div><div class="line">	<span class="keyword">if</span>(<span class="attr">mon==2&amp;amp;&amp;amp;year%4==0&amp;amp;&amp;amp;(year%100!=0||year%400==0))&#123;return(29);&#125;</span></div><div class="line">	<span class="keyword">else</span> return(dm[mon]);</div><div class="line">&#125;</div><div class="line">void st(uint x)&#123;</div><div class="line"></div><div class="line">	/////////</div><div class="line">				<span class="attr">SBUF=x;</span></div><div class="line">				while(!TI)  ;  </div><div class="line">        <span class="attr">TI=0;</span>  </div><div class="line">        delay(<span class="number">10</span>); </div><div class="line">&#125;</div><div class="line"></div><div class="line">void main()&#123;</div><div class="line">	 <span class="attr">TH0=(65536-10000)/256;</span></div><div class="line">	 <span class="attr">TL0=(65536-10000)%256;</span></div><div class="line">	 <span class="attr">EA=1;</span></div><div class="line">	 <span class="attr">ET0=1;</span>			 </div><div class="line">	 <span class="attr">TR0=1;</span></div><div class="line"></div><div class="line">	 <span class="attr">TMOD=0x21;</span></div><div class="line"></div><div class="line">		<span class="attr">SCON</span> = <span class="number">0</span>x50;   </div><div class="line">    <span class="attr">TH1</span> = <span class="number">0</span>xFD;  </div><div class="line">    <span class="attr">TL1</span> = <span class="number">0</span>xFD;  </div><div class="line">    <span class="attr">TR1</span> = <span class="number">1</span>;                          </div><div class="line">    <span class="attr">ES</span>  = <span class="number">1</span>;</div><div class="line"></div><div class="line">	<span class="attr">i=9;</span></div><div class="line">	<span class="attr">Pa=Pd=Pc=0x00;</span></div><div class="line">	delay(<span class="number">500</span>);while(<span class="attr">bk5==0);ka=0;</span></div><div class="line">	<span class="attr">Pa=Pd=Pc=0xFF;</span></div><div class="line"></div><div class="line">	while(i++)&#123;</div><div class="line">		delay(<span class="number">20</span>);</div><div class="line">		//<span class="attr">Pb=0x00;//Pb=Pb*0x10;</span></div><div class="line">		<span class="keyword">if</span>(i&amp;gt;<span class="number">0</span>x7FF)<span class="attr">i=9;</span></div><div class="line">		<span class="attr">t=i%12;p=0x01;</span></div><div class="line">		while(t--)&#123;</div><div class="line">			p*=<span class="number">2</span>;</div><div class="line">		&#125;</div><div class="line">		<span class="attr">Pc=0xFF;//0</span></div><div class="line">		<span class="keyword">if</span>(p&amp;lt;<span class="number">0</span>xFF)&#123;</div><div class="line">			<span class="attr">Pa=0xFF-p;</span></div><div class="line">			<span class="attr">Pd=0xFF;</span></div><div class="line">			<span class="keyword">if</span>(ring&amp;amp;&amp;amp;num0/<span class="number">2</span>%<span class="number">2</span>&amp;amp;&amp;amp;num0&amp;gt;<span class="number">3</span>)<span class="attr">beep=0;</span></div><div class="line">			<span class="keyword">if</span>(<span class="attr">k==0)&#123;</span></div><div class="line">				<span class="keyword">if</span>(<span class="attr">ka==1)led=0;</span></div><div class="line">				<span class="keyword">else</span> <span class="keyword">if</span>(num0/<span class="number">5</span>%<span class="number">2</span>)&#123;</div><div class="line"></div><div class="line">						<span class="attr">led=0;</span></div><div class="line"></div><div class="line">				&#125;</div><div class="line">			&#125;</div><div class="line"></div><div class="line">		&#125;</div><div class="line">		<span class="keyword">else</span> &#123;</div><div class="line">			<span class="attr">Pa=0xFF;Pd=0xFF-p/0x100;</span></div><div class="line">			<span class="keyword">if</span>(ring&amp;amp;&amp;amp;num0/<span class="number">2</span>%<span class="number">2</span>&amp;amp;&amp;amp;num0&amp;gt;<span class="number">3</span>)<span class="attr">beep=0;</span></div><div class="line">			<span class="keyword">if</span>(<span class="attr">k==0)&#123;</span></div><div class="line">				<span class="keyword">if</span>(<span class="attr">ka==1)led=0;</span></div><div class="line">				<span class="keyword">else</span> <span class="keyword">if</span>(num0/<span class="number">5</span>%<span class="number">2</span>)&#123;</div><div class="line"></div><div class="line">						<span class="attr">led=0;</span></div><div class="line"></div><div class="line">				&#125;</div><div class="line">			&#125;</div><div class="line">		//	<span class="keyword">if</span>(num0/<span class="number">5</span>%<span class="number">2</span>&amp;amp;&amp;amp;<span class="attr">k==0)&#123;</span></div><div class="line"></div><div class="line">		//			<span class="attr">Pd-=0x10;</span></div><div class="line"></div><div class="line">		//	&#125;</div><div class="line">		&#125;</div><div class="line"></div><div class="line">				<span class="attr">Pc=map[num[(i)%12]];</span></div><div class="line">		<span class="comment">/*//</span></div><div class="line">			switch(num[(i)%12])&#123;</div><div class="line">				case 0:Pc=0xC0;break;</div><div class="line">				case 1:Pc=0xF9;break;</div><div class="line">				case 2:Pc=0xA4;break;</div><div class="line">				case 3:Pc=0xB0;break;</div><div class="line">				case 4:Pc=0x99;break;</div><div class="line">				case 5:Pc=0x92;break;</div><div class="line">				case 6:Pc=0x82;break;</div><div class="line">				case 7:Pc=0xF8;break;</div><div class="line">				case 8:Pc=0x80;break;</div><div class="line">				case 9:Pc=0x98;break;</div><div class="line">				case 10:Pc=0xBF;break;</div><div class="line">				case 11:Pc=0xFF;break;</div><div class="line"></div><div class="line">			&#125;</div><div class="line">			*///</div><div class="line">			<span class="keyword">if</span>(<span class="keyword">in</span>[<span class="number">6</span>]==<span class="number">1</span>)&#123;</div><div class="line">				<span class="keyword">in</span>[<span class="number">6</span>]=<span class="number">0</span>;</div><div class="line">				<span class="attr">year=in[0];</span></div><div class="line">				<span class="attr">mon=in[1];</span></div><div class="line">				<span class="attr">day=in[2];</span></div><div class="line">				<span class="attr">hour=in[3];</span></div><div class="line">				<span class="attr">minu=in[4];</span></div><div class="line">				<span class="attr">sec=in[5];</span></div><div class="line"></div><div class="line">			&#125;</div><div class="line">			<span class="keyword">if</span>(<span class="keyword">in</span>[<span class="number">6</span>]==<span class="number">2</span>)&#123;</div><div class="line">			  <span class="keyword">in</span>[<span class="number">6</span>]=<span class="number">0</span>;</div><div class="line">				st(year);</div><div class="line">				st(mon);</div><div class="line">				st(day);</div><div class="line">				st(hour);</div><div class="line">				st(minu);</div><div class="line">				st(sec);</div><div class="line">				st(<span class="number">1</span>);</div><div class="line">			&#125;</div><div class="line">			//</div><div class="line">			<span class="keyword">if</span>(k)&#123;</div><div class="line">					num[<span class="number">0</span>]=year/<span class="number">1000</span>;//k;//</div><div class="line">					num[<span class="number">1</span>]=year/<span class="number">100</span>%<span class="number">10</span>;//s;//</div><div class="line">					num[<span class="number">2</span>]=year/<span class="number">10</span>%<span class="number">10</span>;//kl;//</div><div class="line">					num[<span class="number">3</span>]=year%<span class="number">10</span>;</div><div class="line">					num[<span class="number">4</span>]=<span class="number">10</span>;</div><div class="line">					num[<span class="number">5</span>]=mon/<span class="number">10</span>;</div><div class="line">					num[<span class="number">6</span>]=mon%<span class="number">10</span>;</div><div class="line">					num[<span class="number">7</span>]=<span class="number">10</span>;</div><div class="line">					num[<span class="number">8</span>]=day/<span class="number">10</span>;</div><div class="line">					num[<span class="number">9</span>]=day%<span class="number">10</span>;</div><div class="line">					num[<span class="number">10</span>]=<span class="number">11</span>;</div><div class="line">					num[<span class="number">11</span>]=<span class="number">11</span>;</div><div class="line"></div><div class="line">				<span class="keyword">if</span>(num0/<span class="number">5</span>%<span class="number">2</span>&amp;amp;&amp;amp;s!=<span class="number">0</span>)&#123;</div><div class="line"></div><div class="line">					//<span class="keyword">if</span>()&#123;</div><div class="line"></div><div class="line">						<span class="keyword">if</span>(<span class="attr">s==1)num[0]=num[1]=num[2]=num[3]=11;</span></div><div class="line">						<span class="keyword">if</span>(<span class="attr">s==2)num[5]=num[6]=11;</span></div><div class="line">						<span class="keyword">if</span>(<span class="attr">s==3)num[8]=num[9]=11;</span></div><div class="line">				//	&#125;</div><div class="line"></div><div class="line">				&#125;</div><div class="line"></div><div class="line">			&#125;</div><div class="line"></div><div class="line">			<span class="keyword">else</span>&#123;</div><div class="line">				<span class="keyword">if</span>(<span class="attr">ka==0)&#123;</span></div><div class="line">					num[<span class="number">0</span>]=<span class="number">11</span>;//beep;//Pb/<span class="number">100</span>;//k;//</div><div class="line">					num[<span class="number">1</span>]=hour/<span class="number">10</span>;//Pb/<span class="number">10</span>%<span class="number">10</span>;//s;//</div><div class="line">					num[<span class="number">2</span>]=hour%<span class="number">10</span>;//Pb%<span class="number">10</span>;//kl;//</div><div class="line">					num[<span class="number">3</span>]=<span class="number">11</span>;//led;//</div><div class="line">					num[<span class="number">4</span>]=<span class="number">11</span>;</div><div class="line">					num[<span class="number">5</span>]=minu/<span class="number">10</span>;//Pd/<span class="number">100</span>;//</div><div class="line">					num[<span class="number">6</span>]=minu%<span class="number">10</span>;//Pd/<span class="number">10</span>%<span class="number">10</span>;//</div><div class="line">					num[<span class="number">7</span>]=<span class="number">11</span>;//Pd%<span class="number">10</span>;//</div><div class="line">					num[<span class="number">8</span>]=<span class="number">11</span>;</div><div class="line">					num[<span class="number">9</span>]=sec/<span class="number">10</span>;</div><div class="line">					num[<span class="number">10</span>]=sec%<span class="number">10</span>;</div><div class="line">					num[<span class="number">11</span>]=<span class="number">11</span>;</div><div class="line"></div><div class="line">					<span class="keyword">if</span>(num0/<span class="number">5</span>%<span class="number">2</span>&amp;amp;&amp;amp;s!=<span class="number">0</span>)&#123;</div><div class="line"></div><div class="line">					//	<span class="keyword">if</span>()&#123;</div><div class="line">							<span class="keyword">if</span>(<span class="attr">s==1)num[1]=num[2]=11;</span></div><div class="line">							<span class="keyword">if</span>(<span class="attr">s==2)num[5]=num[6]=11;</span></div><div class="line">							<span class="keyword">if</span>(<span class="attr">s==3)num[9]=num[10]=11;</span></div><div class="line">					//	&#125;</div><div class="line"></div><div class="line">						&#125;</div><div class="line">				&#125;</div><div class="line">				<span class="keyword">else</span>&#123;</div><div class="line">					num[<span class="number">0</span>]=<span class="number">11</span>;//k;//Pb/<span class="number">100</span>;//</div><div class="line">					num[<span class="number">1</span>]=ahour/<span class="number">10</span>;//s;//Pb/<span class="number">10</span>%<span class="number">10</span>;//</div><div class="line">					num[<span class="number">2</span>]=ahour%<span class="number">10</span>;//kl;//Pb%<span class="number">10</span>;//</div><div class="line">					num[<span class="number">3</span>]=<span class="number">11</span>;</div><div class="line">					num[<span class="number">4</span>]=<span class="number">11</span>;</div><div class="line">					num[<span class="number">5</span>]=aminu/<span class="number">10</span>;</div><div class="line">					num[<span class="number">6</span>]=aminu%<span class="number">10</span>;</div><div class="line">					num[<span class="number">7</span>]=<span class="number">11</span>;</div><div class="line">					num[<span class="number">8</span>]=<span class="number">11</span>;</div><div class="line">					<span class="keyword">if</span>(alarm)&#123;</div><div class="line">						num[<span class="number">9</span>]=<span class="number">12</span>;</div><div class="line">						num[<span class="number">10</span>]=<span class="number">13</span>;</div><div class="line">						num[<span class="number">11</span>]=<span class="number">11</span>;</div><div class="line">					&#125;</div><div class="line">					<span class="keyword">else</span>&#123;</div><div class="line">						num[<span class="number">9</span>]=<span class="number">12</span>;</div><div class="line">						num[<span class="number">10</span>]=<span class="number">14</span>;</div><div class="line">						num[<span class="number">11</span>]=<span class="number">14</span>;</div><div class="line">					&#125;</div><div class="line"></div><div class="line">					<span class="keyword">if</span>(num0/<span class="number">5</span>%<span class="number">2</span>&amp;amp;&amp;amp;s!=<span class="number">0</span>)&#123;</div><div class="line">						<span class="keyword">if</span>(<span class="attr">s==1)num[1]=num[2]=11;</span></div><div class="line">						<span class="keyword">if</span>(<span class="attr">s==2)num[5]=num[6]=11;</span></div><div class="line"></div><div class="line">					&#125;</div><div class="line">				&#125;</div><div class="line"></div><div class="line">			&#125;</div><div class="line"></div><div class="line">			//alarm----</div><div class="line">			<span class="keyword">if</span>(<span class="attr">alarm==1)&#123;</span></div><div class="line">				<span class="keyword">if</span>(<span class="attr">hour==ahour&amp;amp;&amp;amp;minu==aminu&amp;amp;&amp;amp;sec==0)ring=1;</span></div><div class="line">				<span class="keyword">if</span>(minu-aminu&amp;gt;=<span class="number">10</span>&amp;amp;&amp;amp;minu-aminu&amp;lt;=<span class="number">65505</span>) <span class="attr">ring=0;</span></div><div class="line">			&#125;</div><div class="line">			<span class="keyword">else</span> <span class="attr">ring=0;</span></div><div class="line"></div><div class="line">	&#125;</div><div class="line"></div><div class="line">&#125;</div><div class="line">void time0() interrupt <span class="number">1</span>&#123;	//<span class="number">1</span>s</div><div class="line">  <span class="attr">TH0=(65536-50000)/256;</span></div><div class="line">   <span class="attr">TL0=(65536-50000)%256;</span></div><div class="line">   num0++; </div><div class="line">   <span class="keyword">if</span>(<span class="attr">num0==20)&#123;</span></div><div class="line">     <span class="attr">num0=0;</span></div><div class="line">	   sec++;</div><div class="line"></div><div class="line">				<span class="keyword">if</span>(<span class="attr">sec==60)&#123;</span></div><div class="line">					<span class="attr">sec=0;minu++;</span></div><div class="line">					<span class="keyword">if</span>(<span class="attr">minu==60)&#123;</span></div><div class="line">						<span class="attr">minu=0;hour++;</span></div><div class="line">						<span class="keyword">if</span>(<span class="attr">hour==24)&#123;</span></div><div class="line">							<span class="attr">hour=0;day++;</span></div><div class="line">							<span class="keyword">if</span>(day&amp;gt;md())&#123;</div><div class="line">								<span class="attr">day=1;mon++;</span></div><div class="line">								<span class="keyword">if</span>(<span class="attr">mon==13)&#123;</span></div><div class="line">									<span class="attr">mon=1;year++;</span></div><div class="line">									<span class="keyword">if</span>(year&amp;gt;=<span class="number">10000</span>)&#123;</div><div class="line">										<span class="attr">year=0;</span></div><div class="line">									&#125;</div><div class="line">								&#125;</div><div class="line">							&#125;</div><div class="line">						&#125;</div><div class="line">					&#125;</div><div class="line">				&#125;</div><div class="line">			&#125;</div><div class="line"></div><div class="line">			//key----</div><div class="line"></div><div class="line">			<span class="keyword">if</span>(<span class="attr">Pb==0xFF||Pb==0xFF-0x04||Pb==0xFF-0x08||Pb==0xFF-0x04-0x08)&#123;</span></div><div class="line">				delay(<span class="number">1</span>);</div><div class="line">				<span class="keyword">if</span>(<span class="attr">Pb==0xFF||Pb==0xFF-0x04||Pb==0xFF-0x08||Pb==0xFF-0x04-0x08)&#123;</span></div><div class="line">					<span class="attr">kl=0;</span></div><div class="line">					<span class="keyword">if</span>(<span class="attr">s==0)&#123;</span></div><div class="line">						<span class="keyword">if</span>(<span class="attr">bk2==0)&#123;</span></div><div class="line">							<span class="attr">k=1;</span></div><div class="line">						&#125;</div><div class="line">						<span class="keyword">else</span> <span class="attr">k=0;</span></div><div class="line">					&#125;</div><div class="line">					<span class="keyword">if</span>(<span class="attr">bk3==0)&#123;</span></div><div class="line">						<span class="attr">alarm=1;</span></div><div class="line">					&#125;</div><div class="line">					<span class="keyword">else</span> <span class="attr">alarm=0;</span></div><div class="line">				&#125;</div><div class="line">			&#125;</div><div class="line">		<span class="comment">/*	if(Pb==0xFF-0x04&amp;amp;&amp;amp;kl==0&amp;amp;&amp;amp;s==0)&#123;</span></div><div class="line">				delay(1);</div><div class="line">				if(Pb==0xFF-0x04)&#123;</div><div class="line">					kl=1;</div><div class="line">					k=k==0?1:0;</div><div class="line">				&#125;</div><div class="line">			&#125;*/</div><div class="line"></div><div class="line">			//</div><div class="line"></div><div class="line">			<span class="keyword">if</span>(<span class="attr">bk7==0&amp;amp;&amp;amp;kl==0)&#123;</span></div><div class="line">				delay(<span class="number">1</span>);</div><div class="line">				<span class="keyword">if</span>(<span class="attr">bk7==0)&#123;</span></div><div class="line">					<span class="attr">kl=1;</span></div><div class="line">		  		<span class="attr">s=((s==0)?1:((s==1)?2:((s==2)&amp;amp;&amp;amp;(k==1)?3:0)));</span></div><div class="line">					<span class="comment">/*</span></div><div class="line">					if(s==0)s=1;</div><div class="line">					else if(s==1)s=2;</div><div class="line">					else if(s==2&amp;amp;&amp;amp;k==1)s=3;</div><div class="line">					else s=0;</div><div class="line">					*/</div><div class="line">				&#125;</div><div class="line">			&#125;</div><div class="line">			<span class="keyword">if</span>(<span class="attr">bk5==0&amp;amp;&amp;amp;kl==0)&#123;</span></div><div class="line">				delay(<span class="number">1</span>);</div><div class="line">				<span class="keyword">if</span>(<span class="attr">bk5==0)&#123;</span></div><div class="line">					<span class="attr">kl=1;</span></div><div class="line">					<span class="keyword">if</span>(<span class="attr">s==0)ka=((ka==0)?1:0);</span></div><div class="line">					<span class="comment">/*</span></div><div class="line">					if(s==0)s=1;</div><div class="line">					else if(s==1)s=2;</div><div class="line">					else if(s==2&amp;amp;&amp;amp;k==1)s=3;</div><div class="line">					else s=0;</div><div class="line">					*/</div><div class="line">				&#125;</div><div class="line">			&#125;</div><div class="line">			//</div><div class="line">			<span class="keyword">if</span>((<span class="attr">bk4==0||bk6==0)&amp;amp;&amp;amp;kl==0&amp;amp;&amp;amp;s!=0)&#123;</span></div><div class="line">				delay(<span class="number">1</span>);</div><div class="line">				<span class="keyword">if</span>(<span class="attr">bk4==0||bk6==0)&#123;</span></div><div class="line">					<span class="attr">kl=1;</span></div><div class="line">					<span class="keyword">if</span>(k)&#123;</div><div class="line">						<span class="keyword">if</span>(<span class="attr">s==1)&#123;</span></div><div class="line"></div><div class="line">							<span class="keyword">if</span>(<span class="attr">bk4==0&amp;amp;&amp;amp;year&amp;lt;9999)year++;</span></div><div class="line">							<span class="keyword">if</span>(<span class="attr">bk6==0&amp;amp;&amp;amp;year&amp;gt;0)</span> year--;</div><div class="line"></div><div class="line">						&#125;</div><div class="line">						<span class="keyword">if</span>(<span class="attr">s==2)&#123;</span></div><div class="line">							<span class="keyword">if</span>(<span class="attr">bk4==0)mon++;</span></div><div class="line">							<span class="keyword">else</span> mon--;</div><div class="line">							<span class="keyword">if</span>(mon&amp;lt;<span class="number">1</span>)<span class="attr">mon=12;</span></div><div class="line">							<span class="keyword">if</span>(mon&amp;gt;<span class="number">12</span>)<span class="attr">mon=1;</span></div><div class="line">						&#125;</div><div class="line">						<span class="keyword">if</span>(<span class="attr">s==3)&#123;</span></div><div class="line">							<span class="keyword">if</span>(<span class="attr">bk4==0)&#123;day++;&#125;</span></div><div class="line">//							<span class="keyword">if</span>(((day&amp;lt;<span class="number">31</span>)&amp;amp;&amp;amp;(<span class="attr">mon==1||mon==3||mon==5||mon==7||mon==8||mon==10||mon==12))||((day&amp;lt;30)&amp;amp;&amp;amp;(mon==4||mon==6||mon==9||mon==11))||(((day&amp;lt;29)&amp;amp;&amp;amp;(mon==2&amp;amp;&amp;amp;year%4==0&amp;amp;&amp;amp;(year%100!=0||year%400==0))))||((day&amp;lt;28)&amp;amp;&amp;amp;(mon==2)));</span></div><div class="line">//							<span class="keyword">else</span> <span class="attr">day=0;</span></div><div class="line">							<span class="keyword">if</span>(day&amp;gt;md())<span class="attr">day=1;</span></div><div class="line">							<span class="keyword">if</span>(<span class="attr">bk6==0)day--;</span></div><div class="line">							<span class="keyword">if</span>(day&amp;lt;<span class="number">1</span>)&#123;<span class="attr">day=md();</span></div><div class="line">//								<span class="keyword">if</span>(<span class="attr">mon==1||mon==3||mon==5||mon==7||mon==8||mon==10||mon==12)day=31;</span></div><div class="line">//								<span class="keyword">else</span> <span class="keyword">if</span>(<span class="attr">mon==4||mon==6||mon==9||mon==11)day=30;</span></div><div class="line">//								   <span class="keyword">else</span> <span class="keyword">if</span>(<span class="attr">mon==2&amp;amp;&amp;amp;year%4==0&amp;amp;&amp;amp;(year%100!=0||year%400==0))day=29;</span></div><div class="line">//													<span class="keyword">else</span> <span class="attr">day=28;////</span></div><div class="line"></div><div class="line">							&#125;</div><div class="line"></div><div class="line">							<span class="comment">/*if(day&amp;lt;1)&#123;</span></div><div class="line">								if(mon==2)&#123;</div><div class="line">									if(year%4!=0)&#123;</div><div class="line">										day=28;</div><div class="line"></div><div class="line">									&#125;</div><div class="line">									if(year%100==0&amp;amp;&amp;amp;year%400!=0)&#123;</div><div class="line">										day=28;</div><div class="line">									&#125;</div><div class="line">									else day=29;</div><div class="line">								&#125;</div><div class="line">								if(mon==2||mon==4||mon==6||mon==9||mon==11)day=30;</div><div class="line">								else day=31;</div><div class="line">							&#125;</div><div class="line">						&#125;</div><div class="line">							if(day&amp;gt;=29)&#123;</div><div class="line">								if(day==29&amp;amp;&amp;amp;mon==2&amp;amp;&amp;amp;(year%4!=0||(year%100==0&amp;amp;&amp;amp;year%400!=0)))&#123;</div><div class="line">									day=0;</div><div class="line">								&#125;</div><div class="line">								if(day==30&amp;amp;&amp;amp;mon==2)&#123;</div><div class="line">									day=0;</div><div class="line">								&#125;</div><div class="line">								if((day==31&amp;amp;&amp;amp;(mon==2||mon==4||mon==6||mon==9||mon==11))||day==32)&#123;</div><div class="line">									day=0;</div><div class="line">								&#125;</div><div class="line">						&#125;*/</div><div class="line">					&#125;	</div><div class="line">				&#125;</div><div class="line">					<span class="keyword">else</span>&#123;</div><div class="line">						<span class="keyword">if</span>(<span class="attr">ka==0)&#123;</span></div><div class="line">								<span class="keyword">if</span>(<span class="attr">s==1)&#123;</span></div><div class="line"></div><div class="line">									<span class="keyword">if</span>(<span class="attr">bk4==0)if(hour&amp;lt;23)hour++;else</span> <span class="attr">hour=0;</span></div><div class="line">									<span class="keyword">if</span>(<span class="attr">bk6==0)if(hour&amp;gt;0)hour--;else</span> <span class="attr">hour=23;</span></div><div class="line"></div><div class="line">								&#125;</div><div class="line">								<span class="keyword">if</span>(<span class="attr">s==2)&#123;</span></div><div class="line">									<span class="keyword">if</span>(<span class="attr">bk4==0)if(minu&amp;lt;59)minu++;else</span> <span class="attr">minu=0;</span></div><div class="line">									<span class="keyword">if</span>(<span class="attr">bk6==0)if(minu&amp;gt;0)</span> minu--;<span class="keyword">else</span> <span class="attr">minu=59;</span></div><div class="line"></div><div class="line">								<span class="attr">sec=0;</span></div><div class="line">							&#125;</div><div class="line">						&#125;</div><div class="line">						<span class="keyword">else</span>&#123;</div><div class="line">							<span class="keyword">if</span>(<span class="attr">s==1)&#123;</span></div><div class="line"></div><div class="line">									<span class="keyword">if</span>(<span class="attr">bk4==0)if(ahour&amp;lt;23)ahour++;else</span> <span class="attr">ahour=0;</span></div><div class="line">									<span class="keyword">if</span>(<span class="attr">bk6==0)if(ahour&amp;gt;0)ahour--;else</span> <span class="attr">ahour=23;</span></div><div class="line"></div><div class="line">								&#125;</div><div class="line">								<span class="keyword">if</span>(<span class="attr">s==2)&#123;</span></div><div class="line">									<span class="keyword">if</span>(<span class="attr">bk4==0)if(aminu&amp;lt;59)aminu++;else</span> <span class="attr">aminu=0;</span></div><div class="line">									<span class="keyword">if</span>(<span class="attr">bk6==0)if(aminu&amp;gt;0)</span> aminu--;<span class="keyword">else</span> <span class="attr">aminu=59;</span></div><div class="line"></div><div class="line">						&#125;</div><div class="line"></div><div class="line">					&#125;</div><div class="line"></div><div class="line">			&#125;	</div><div class="line">		&#125;	</div><div class="line">		 <span class="keyword">if</span>((<span class="attr">Pb==0xFF-0x10||Pb==0xFF-0x40)&amp;amp;&amp;amp;kl==0&amp;amp;&amp;amp;s==0)&#123;</span></div><div class="line">				delay(<span class="number">1</span>);</div><div class="line">				<span class="keyword">if</span>(<span class="attr">Pb==0xFF-0x10)&#123;</span></div><div class="line">					<span class="attr">kl=1;</span></div><div class="line">					<span class="keyword">in</span>[<span class="number">6</span>]=<span class="number">2</span>;</div><div class="line">				&#125;</div><div class="line">				<span class="keyword">if</span>(<span class="attr">Pb==0xFF-0x40)&#123;</span></div><div class="line">					<span class="attr">kl=1;ii=7;</span></div><div class="line">					while(ii--)st(<span class="number">2</span>);</div><div class="line">				&#125;</div><div class="line"></div><div class="line">		 &#125;</div><div class="line"></div><div class="line">	 &#125;</div><div class="line"></div><div class="line">&#125;</div><div class="line"></div><div class="line">void ser() interrupt <span class="number">4</span></div><div class="line">&#123;</div><div class="line">	  <span class="keyword">if</span>(<span class="attr">RI</span> == <span class="number">1</span>) &#123;  </div><div class="line">      <span class="attr">RI</span> = <span class="number">0</span>;     </div><div class="line"></div><div class="line">      <span class="keyword">in</span>[ii] = SBUF;</div><div class="line"></div><div class="line">    &#125;</div><div class="line"></div><div class="line">		ii++;</div><div class="line">		<span class="attr">ii=ii==7?0:ii;</span></div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
</blockquote>
<p>头文件</p>
<blockquote>
<p>ch1.h<br><figure class="highlight cs"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> uint unsigned int</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> uchar unsigned char</span></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">delay</span>(<span class="params"><span class="keyword">uint</span> z</span>)</span></div><div class="line">&#123;</div><div class="line">	<span class="keyword">uint</span> zz;</div><div class="line">	<span class="keyword">while</span>(z--)&#123;zz=z;<span class="keyword">while</span>(zz--);&#125;</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
</blockquote>
<p>&nbsp;<br>源文件下载 <a href="http://7u2p8s.com1.z0.glb.clouddn.com/blog/file/2015/07/c51clock.zip" target="_blank" rel="external">c51clock.zip</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;基于STC12C5A60S2单片机，共使用6个按键、12位共阳数码管、4LED灯加一有源头蜂鸣器，按键占用一组I/O口，数码管、LED灯与蜂鸣器公用三组IO口。分两个板子，其实设计的也不怎么好，还有一些飞线，电路图和pcb图如下：&lt;br&gt;&lt;img src=&quot;http://7
    
    </summary>
    
      <category term="未分类" scheme="http://blog.cosimahan.com/categories/%E6%9C%AA%E5%88%86%E7%B1%BB/"/>
    
    
  </entry>
  
  <entry>
    <title>把域名从 Godaddy 转到了 NameSilo</title>
    <link href="http://blog.cosimahan.com/%E6%8A%8A%E5%9F%9F%E5%90%8D%E4%BB%8E%20Godaddy%20%E8%BD%AC%E5%88%B0%E4%BA%86%20NameSilo.html"/>
    <id>http://blog.cosimahan.com/把域名从 Godaddy 转到了 NameSilo.html</id>
    <published>2015-04-17T04:16:00.000Z</published>
    <updated>2016-08-16T06:36:44.871Z</updated>
    
    <content type="html"><![CDATA[<p>域名还不到一个月过期，发现续费好贵，也没有好用的优惠码，再加上朋友的域名被盗事件，便不想继续放在 Godaddy 那儿了。近日发现 NameSilo 价格尚可，送隐私保护，那就选它了，开工。</p>
<p><a href="http://7u2p8s.com1.z0.glb.clouddn.com/blog/img/2015/04/7BY2WDOF4@2BQQEW44ATJBW.png" target="_blank" rel="external"><img src="http://7u2p8s.com1.z0.glb.clouddn.com/blog/img/2015/04/7BY2WDOF4@2BQQEW44ATJBW-290x300.png" alt="NameSilo1"></a></p>
<p>给 Godaddy 要转移码</p>
<p><a href="http://7u2p8s.com1.z0.glb.clouddn.com/blog/img/2015/04/JRL4T4Y20WM51U8F0DXVE.png" target="_blank" rel="external"><img src="http://7u2p8s.com1.z0.glb.clouddn.com/blog/img/2015/04/namesilo1-300x186.png" alt="namesilo1">   <img src="http://7u2p8s.com1.z0.glb.clouddn.com/blog/img/2015/04/JRL4T4Y20WM51U8F0DXVE-300x157.png" alt="JR)L4T4Y20WM51U8F0)DXVE"></a></p>
<p>&nbsp;</p>
<p>收到邮件</p>
<p><a href="http://7u2p8s.com1.z0.glb.clouddn.com/blog/img/2015/04/AN_EQMO%4D7WVESHU@7ED.png" target="_blank" rel="external"><img src="http://7u2p8s.com1.z0.glb.clouddn.com/blog/img/2015/04/namesilo2-300x226.png" alt="namesilo2"></a></p>
<p>该付款了，有优惠码可省1刀</p>
<p><a href="http://7u2p8s.com1.z0.glb.clouddn.com/blog/img/2015/04/G0AU06SBTF9RWFO5A1O2.png" target="_blank" rel="external"><img src="http://7u2p8s.com1.z0.glb.clouddn.com/blog/img/2015/04/G0AU06SBTF9RWFO5A1O2-300x272.png" alt="G0AU06SBT)F9}RW~FO5A1O2"></a></p>
<p>&nbsp;</p>
<p>价格还可以</p>
<p><a href="http://7u2p8s.com1.z0.glb.clouddn.com/blog/img/2015/04/namesilo5.png" target="_blank" rel="external"><img src="http://7u2p8s.com1.z0.glb.clouddn.com/blog/img/2015/04/namesilo5.png" alt="namesilo5"></a></p>
<!--StartFragment -->
<div>钱支付了，namesilo 这边还是订单待完成，Q_Q，先去写会代码等等吧</div><br><div></div><br>&nbsp;<br><div></div><br><div>写~</div><br><div></div><br>&nbsp;<br><div></div><br><div>代~</div><br><div></div><br>&nbsp;<br><div></div><br><div>码~</div><br><div></div><br><div></div><br>&nbsp;<br><div></div><br><div></div><br><div>收到客服回信</div><br><div></div><br><div><a href="http://7u2p8s.com1.z0.glb.clouddn.com/blog/img/2015/04/OD44OC0DGMFXMIK3_5_IM.png" target="_blank" rel="external"><img src="http://7u2p8s.com1.z0.glb.clouddn.com/blog/img/2015/04/OD44OC0DGMFXMIK3_5_IM.png" alt="namesilo6"></a></div><br><div></div><br>&nbsp;<br><div>继续继续</div><br><div></div><br>&nbsp;<br><div><a href="http://7u2p8s.com1.z0.glb.clouddn.com/blog/img/2015/04/PT9O93L_5AW938LOE7QH.png" target="_blank" rel="external"><img src="http://7u2p8s.com1.z0.glb.clouddn.com/blog/img/2015/04/PT9O93L_5AW938LOE7QH-300x214.png" alt="PT&#96;9O93L(_5AW938L$OE7QH"></a></div><br><div></div><br>&nbsp;<br><div></div><br><div>在 Godaddy 域名状态已经变成了这样</div><br><div></div><br>&nbsp;<br><div><a href="http://7u2p8s.com1.z0.glb.clouddn.com/blog/img/2015/04/86LK60N0_PZ259T88.png" target="_blank" rel="external"><img src="http://7u2p8s.com1.z0.glb.clouddn.com/blog/img/2015/04/86LK60N0_PZ259T88-300x62.png" alt="namesilo8"></a></div><br>&nbsp;<br><div>手动确认</div><br>&nbsp;<br><div></div><br><div><img src="http://7u2p8s.com1.z0.glb.clouddn.com/blog/img/2015/04/namesilo3-300x155.png" alt="namesilo3">  <img src="http://7u2p8s.com1.z0.glb.clouddn.com/blog/img/2015/04/namesilo4-300x191.jpg" alt="namesilo4"></div><br><div></div><br>&nbsp;<br><div>这样就不用等待了</div><br><div></div><br>&nbsp;<br><div><a href="http://7u2p8s.com1.z0.glb.clouddn.com/blog/img/2015/04/3X_R91XA7R1PE7JAMK5IW.png" target="_blank" rel="external"><img src="http://7u2p8s.com1.z0.glb.clouddn.com/blog/img/2015/04/3X_R91XA7R1PE7JAMK5IW-300x152.png" alt="~3}X_R91XA7R1PE7JAMK5IW"></a></div><br><div></div><br><div></div><br>&nbsp;<br><div>在  NameSilo 的状态</div><br>&nbsp;<br><div></div><br><div><a href="http://7u2p8s.com1.z0.glb.clouddn.com/blog/img/2015/04/05@LQDY8BGFUNQBI7VHM.png" target="_blank" rel="external"><img src="http://7u2p8s.com1.z0.glb.clouddn.com/blog/img/2015/04/05@LQDY8BGFUNQBI7VHM-300x32.png" alt="])05@LQDY8BGFUNQBI7VH(M"></a></div><br><div></div><br>&nbsp;<br><div>OK</div><br><div></div><br><div><a href="http://7u2p8s.com1.z0.glb.clouddn.com/blog/img/2015/04/@THA2NY7XGOOXUZDX2@8.png" target="_blank" rel="external"><img src="http://7u2p8s.com1.z0.glb.clouddn.com/blog/img/2015/04/@THA2NY7XGOOXUZDX2@8-300x154.png" alt="@THA2NY7XGOOXUZ&#96;DX~2}@8"></a></div><br><div></div><br>&nbsp;<br><div></div><br><div>WHOIS 信息已经变了</div><br><div></div><br>&nbsp;<br><div><a href="http://7u2p8s.com1.z0.glb.clouddn.com/blog/img/2015/04/20150417121552.png" target="_blank" rel="external"><img src="http://7u2p8s.com1.z0.glb.clouddn.com/blog/img/2015/04/20150417121552-300x200.png" alt="20150417121552"></a></div><br><div></div><br>&nbsp;<br><div></div><br><div>大功告成</div><br>&nbsp;<br><div></div>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;域名还不到一个月过期，发现续费好贵，也没有好用的优惠码，再加上朋友的域名被盗事件，便不想继续放在 Godaddy 那儿了。近日发现 NameSilo 价格尚可，送隐私保护，那就选它了，开工。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://7u2p8s.com1.z0.glb
    
    </summary>
    
      <category term="未分类" scheme="http://blog.cosimahan.com/categories/%E6%9C%AA%E5%88%86%E7%B1%BB/"/>
    
    
  </entry>
  
  <entry>
    <title>用C写了个一个支持长数字输入输出计算器</title>
    <link href="http://blog.cosimahan.com/%E7%94%A8C%E5%86%99%E4%BA%86%E4%B8%AA%E4%B8%80%E4%B8%AA%E6%94%AF%E6%8C%81%E9%95%BF%E6%95%B0%E5%AD%97%E8%BE%93%E5%85%A5%E8%BE%93%E5%87%BA%E8%AE%A1%E7%AE%97%E5%99%A8.html"/>
    <id>http://blog.cosimahan.com/用C写了个一个支持长数字输入输出计算器.html</id>
    <published>2015-02-26T07:35:12.000Z</published>
    <updated>2016-08-16T06:36:44.881Z</updated>
    
    <content type="html"><![CDATA[<p>市面上竟然没找到一个支持几千位数字输入的计算器软件，只好自己动手搞了一个。</p>
<p>目前暂时只支持非负整数的加减法运算，我毕竟还是很菜，代码又丑又烂。<br><figure class="highlight lsl"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div></pre></td><td class="code"><pre><div class="line">#include&lt;iostream&gt;</div><div class="line">#include&lt;stdio.h&gt;</div><div class="line">using namespace std;</div><div class="line">int main()&#123;</div><div class="line">	int a[<span class="number">10001</span>],b[<span class="number">10001</span>],o,oo,i,j;</div><div class="line">	char c[<span class="number">20002</span>],d;</div><div class="line">	cout&lt;&lt;<span class="string">"Input equation like '1+1', only support + and - ."</span>&lt;&lt;endl;</div><div class="line">	gets(c);</div><div class="line">	for(i=<span class="number">0</span>;c[i+<span class="number">1</span>]&lt;'<span class="number">9</span>'&amp;&amp;c[i+<span class="number">1</span>]&gt;'<span class="number">0</span>'&amp;&amp;i&lt;<span class="number">20001</span>;i++)&#123;</div><div class="line">		a[i]=c[i]-'<span class="number">0</span>';</div><div class="line">	&#125;</div><div class="line">	if(i==<span class="number">20001</span>||i==<span class="number">0</span>)&#123;cout&lt;&lt;<span class="string">"INPUT ERROR "</span>; return <span class="number">0</span>;&#125;</div><div class="line">	i++;a[i]='/<span class="number">0</span>';o=i;</div><div class="line">	cin&gt;&gt;d;</div><div class="line">	for(i=o,j=<span class="number">0</span>;c[i+<span class="number">1</span>]!='<span class="number">0</span>'&amp;&amp;i&lt;<span class="number">20002</span>;i++,j++)&#123;</div><div class="line">		b[j]=c[i]-'<span class="number">0</span>';</div><div class="line">	&#125;</div><div class="line">	if(i==<span class="number">20002</span>)&#123;cout&lt;&lt;<span class="string">"INPUT ERROR "</span>; return <span class="number">0</span>;&#125;</div><div class="line">	oo=j+<span class="number">1</span>;</div><div class="line">	if(d!='+'||d!='-')&#123;cout&lt;&lt;<span class="string">"INPUT ERROR "</span>; return <span class="number">0</span>;&#125;</div><div class="line">	if(d=='+')&#123;</div><div class="line">		if(o&gt;=oo)&#123;</div><div class="line">			for(i=o<span class="number">-1</span>,j=oo<span class="number">-1</span>;j&gt;=<span class="number">0</span>;i--,j--)&#123;</div><div class="line">				a[i]+=b[j];</div><div class="line">				if(a[i]&gt;<span class="number">9</span>&amp;&amp;i!=<span class="number">0</span>)&#123;a[i]-=<span class="number">10</span>;a[i<span class="number">-1</span>]++;&#125;</div><div class="line">			&#125;</div><div class="line">			for(i=<span class="number">0</span>;i&lt;o;i++)&#123;cout&lt;&lt;a[i];&#125;</div><div class="line">		&#125;</div><div class="line">		else&#123;</div><div class="line">	     	for(i=o<span class="number">-1</span>,j=oo<span class="number">-1</span>;i&gt;=<span class="number">0</span>;i--,j--)&#123;</div><div class="line">				b[j]+=a[i];</div><div class="line">				if(b[j]&gt;<span class="number">9</span>&amp;&amp;j!=<span class="number">0</span>)&#123;b[j]-=<span class="number">10</span>;b[j<span class="number">-1</span>]++;&#125;</div><div class="line">			&#125;</div><div class="line">			for(i=<span class="number">0</span>;i&lt;oo;i++)&#123;cout&lt;&lt;b[i];&#125;</div><div class="line">		&#125;</div><div class="line"></div><div class="line">	&#125;</div><div class="line">	else&#123;</div><div class="line">		if(o&gt;=oo)&#123;</div><div class="line">			for(i=o<span class="number">-1</span>,j=oo<span class="number">-1</span>;j&gt;=<span class="number">0</span>;i--,j--)&#123;</div><div class="line">				a[i]-=b[j];</div><div class="line">				if(a[i]&lt;<span class="number">0</span>&amp;&amp;i!=<span class="number">0</span>)&#123;a[i]+=<span class="number">10</span>;a[i<span class="number">-1</span>]--;&#125;</div><div class="line">			&#125;</div><div class="line">			for(i=<span class="number">0</span>;i&lt;o;i++)&#123;cout&lt;&lt;a[i];&#125;</div><div class="line">		&#125;</div><div class="line">		else&#123;</div><div class="line">			cout&lt;&lt;<span class="string">"INPUT ERROR "</span>; return <span class="number">0</span>;</div><div class="line">		&#125;</div><div class="line"></div><div class="line">	&#125; </div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>&nbsp;</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;市面上竟然没找到一个支持几千位数字输入的计算器软件，只好自己动手搞了一个。&lt;/p&gt;
&lt;p&gt;目前暂时只支持非负整数的加减法运算，我毕竟还是很菜，代码又丑又烂。&lt;br&gt;&lt;figure class=&quot;highlight lsl&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gut
    
    </summary>
    
      <category term="未分类" scheme="http://blog.cosimahan.com/categories/%E6%9C%AA%E5%88%86%E7%B1%BB/"/>
    
    
  </entry>
  
  <entry>
    <title>开始搞ACM</title>
    <link href="http://blog.cosimahan.com/%E5%BC%80%E5%A7%8B%E6%90%9EACM.html"/>
    <id>http://blog.cosimahan.com/开始搞ACM.html</id>
    <published>2014-12-11T13:43:56.000Z</published>
    <updated>2016-08-16T06:36:44.869Z</updated>
    
    <content type="html"><![CDATA[<p>上个月开始搞ACM(ICPC)，虽然只是做一些水题。一道题苦想半天调试N遍最后AC，这感觉 特别爽哟。</p>
<p>随手拿最近的一些水题放上来吧，当做纪念，可能几年后我成为了大神，人们来嘲笑我说，这么烂的代码竟然是他曾经写的。</p>
<hr>
<h4 id="Codeforces-Round-237-Div-2-Valera-and-Fruits"><a href="#Codeforces-Round-237-Div-2-Valera-and-Fruits" class="headerlink" title="Codeforces Round #237 (Div. 2)  - Valera and Fruits"></a>Codeforces Round #237 (Div. 2)  - Valera and Fruits</h4><div id="vj_description" class="hiddable">

<p>Description</p>
<div class="textBG">

<p>Valera loves his garden, where <span class="tex-span"><em>n</em></span> fruit trees grow.</p>
<p>This year he will enjoy a great harvest! On the <span class="tex-span"><em>i</em></span>-th tree <span class="tex-span"><em>b</em><sub class="lower-index"><em>i</em></sub></span> fruit grow, they will ripen on a day number <span class="tex-span"><em>a</em><sub class="lower-index"><em>i</em></sub></span>. Unfortunately, the fruit on the tree get withered, so they can only be collected on day <span class="tex-span"><em>a</em><sub class="lower-index"><em>i</em></sub></span> and day <span class="tex-span"><em>a</em><sub class="lower-index"><em>i</em></sub> + 1</span> (all fruits that are not collected in these two days, become unfit to eat).</p>
<p>Valera is not very fast, but there are some positive points. Valera is ready to work every day. In one day, Valera can collect no more than<span class="tex-span"><em>v</em></span> fruits. The fruits may be either from the same tree, or from different ones. What is the maximum amount of fruit Valera can collect for all time, if he operates optimally well?</p>
<p></p></div><br></div><p></p>
<div id="vj_input" class="hiddable">

<p>Input</p>
<div class="textBG">

<p>The first line contains two space-separated integers <span class="tex-span"><em>n</em></span> and <span class="tex-span"><em>v</em></span><span class="tex-span">(1 ≤ <em>n</em>, <em>v</em> ≤ 3000)</span> — the number of fruit trees in the garden and the number of fruits that Valera can collect in a day.</p>
<p>Next <span class="tex-span"><em>n</em></span> lines contain the description of trees in the garden. The <span class="tex-span"><em>i</em></span>-th line contains two space-separated integers <span class="tex-span"><em>a</em><sub class="lower-index"><em>i</em></sub></span> and <span class="tex-span"><em>b</em><sub class="lower-index"><em>i</em></sub></span><span class="tex-span">(1 ≤ <em>a</em><sub class="lower-index"><em>i</em></sub>, <em>b</em><sub class="lower-index"><em>i</em></sub> ≤ 3000)</span> — the day the fruits ripen on the <span class="tex-span"><em>i</em></span>-th tree and the number of fruits on the <span class="tex-span"><em>i</em></span>-th tree.</p>
<p></p></div><br></div><p></p>
<div id="vj_output" class="hiddable">

<p>Output</p>
<div class="textBG">

<p>Print a single integer — the maximum number of fruit that Valera can collect.</p>
<p></p></div><br></div><p></p>
<div id="vj_sampleInput" class="hiddable">

<p>Sample Input</p>
<p><div class="textBG"></div></p>
<p><div class="input"></div></p>
<p><div class="title">Input</div></p>
<p><pre>2 3<br>1 5<br>2 3</pre><br></p></div><p></p>
<p><div class="output"></div></p>
<p><div class="title">Output</div></p>
<p><pre>8</pre><br></p>
<p><div class="input"></div></p>
<p><div class="title">Input</div></p>
<p><pre>5 10<br>3 20<br>2 20<br>1 20<br>4 20<br>5 20</pre><br></p>
<p><div class="output"></div></p>
<p><div class="title">Output</div></p>
<p><pre>60</pre><br><br><br></p>
<div id="vj_hint" class="hiddable">

<p>Hint</p>
<div class="textBG">

<p>In the first sample, in order to obtain the optimal answer, you should act as follows.</p>
<ul>
<li>On the first day collect <span class="tex-span">3</span> fruits from the <span class="tex-span">1</span>-st tree.</li>
<li>On the second day collect <span class="tex-span">1</span> fruit from the <span class="tex-span">2</span>-nd tree and <span class="tex-span">2</span> fruits from the <span class="tex-span">1</span>-st tree.</li>
<li>On the third day collect the remaining fruits from the <span class="tex-span">2</span>-nd tree.<br>In the second sample, you can only collect <span class="tex-span">60</span> fruits, the remaining fruit will simply wither.</li>
</ul>
<p></p></div><br></div><br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></div><div class="line">&#123;</div><div class="line">	<span class="keyword">long</span> <span class="keyword">int</span> n,v,vv,a[<span class="number">3008</span>],b[<span class="number">3008</span>] ,i,ii,t,o,y,iy;</div><div class="line">	<span class="keyword">while</span> (<span class="built_in">scanf</span>(<span class="string">"%d%d"</span>, &amp;n, &amp;v) != EOF)</div><div class="line">	&#123;</div><div class="line">		o = <span class="number">0</span>; vv = v; y = <span class="number">0</span>;</div><div class="line">		<span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; n; i++)</div><div class="line">		&#123;</div><div class="line">			<span class="built_in">cin</span> &gt;&gt; a[i]&gt;&gt;b[i];</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; n; i++)</div><div class="line">			<span class="keyword">for</span> (ii = i + <span class="number">1</span>; ii &lt; n; ii++)</div><div class="line">			&#123;</div><div class="line">				<span class="keyword">if</span> (a[i]&gt;a[ii])</div><div class="line">				&#123; </div><div class="line">					t = a[i]; a[i] = a[ii]; a[ii] = t; </div><div class="line">					t = b[i]; b[i] = b[ii]; b[ii] = t;</div><div class="line">				&#125;</div><div class="line"></div><div class="line">			&#125;</div><div class="line"></div><div class="line">		<span class="comment">//</span></div><div class="line">		<span class="comment">//</span></div><div class="line">		<span class="comment">//</span></div><div class="line"></div><div class="line">		<span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; n; i++)</div><div class="line">		&#123;</div><div class="line">			<span class="keyword">if</span> (i != <span class="number">0</span>)</div><div class="line">			&#123;</div><div class="line">				<span class="keyword">if</span> (a[i] != a[i - <span class="number">1</span>]) &#123; v = vv; &#125;</div><div class="line"></div><div class="line">			&#125;</div><div class="line">			<span class="keyword">if</span> (v != <span class="number">0</span> &amp;&amp; i != <span class="number">0</span>)</div><div class="line">			&#123;</div><div class="line">				<span class="keyword">for</span> (iy = y; iy &lt; i; iy++)</div><div class="line">				&#123;</div><div class="line">					<span class="keyword">if</span> (b[iy] != <span class="number">0</span>)</div><div class="line">					&#123;</div><div class="line">						<span class="keyword">if</span> (v &lt;= b[iy])</div><div class="line">						&#123;</div><div class="line">							o += v; b[iy] -= v; v = <span class="number">0</span>;</div><div class="line">						&#125;</div><div class="line">						<span class="keyword">else</span> &#123; o += b[iy]; v -= b[iy]; b[iy] = <span class="number">0</span>; &#125;</div><div class="line">					&#125;</div><div class="line">				&#125;</div><div class="line">			&#125;</div><div class="line">			<span class="keyword">if</span> (a[i] - a[i - <span class="number">1</span>] &gt; <span class="number">1</span>) v = vv;</div><div class="line">			<span class="keyword">if</span> (v != <span class="number">0</span>)</div><div class="line">			&#123;</div><div class="line">				<span class="keyword">if</span> (v &lt;= b[i])</div><div class="line">				&#123;</div><div class="line">					o += v; b[i] -= v; v = <span class="number">0</span>;</div><div class="line">				&#125;</div><div class="line">				<span class="keyword">else</span> &#123; o += b[i]; v -= b[i]; b[i] = <span class="number">0</span>; &#125;</div><div class="line">			&#125;</div><div class="line">			<span class="keyword">if</span> (a[i - <span class="number">1</span>] != a[i]&amp;&amp;i!=<span class="number">0</span>) y = i;</div><div class="line"></div><div class="line">		&#125;</div><div class="line"></div><div class="line">		<span class="comment">//</span></div><div class="line">		<span class="comment">//</span></div><div class="line">		<span class="comment">//</span></div><div class="line"></div><div class="line">		v = vv; </div><div class="line"></div><div class="line">		<span class="keyword">for</span> (iy = y; iy &lt; i; iy++)</div><div class="line">		&#123;</div><div class="line">			<span class="keyword">if</span> (b[iy] != <span class="number">0</span>)</div><div class="line">			&#123;</div><div class="line">				<span class="keyword">if</span> (v &lt;= b[iy])</div><div class="line">				&#123;</div><div class="line">					o += v; b[iy] -= v; v = <span class="number">0</span>;</div><div class="line">				&#125;</div><div class="line">				<span class="keyword">else</span> &#123; o += b[iy]; v -= b[iy]; b[iy] = <span class="number">0</span>; &#125;</div><div class="line">			&#125;</div><div class="line">		&#125;</div><div class="line"></div><div class="line">		<span class="built_in">cout</span> &lt;&lt; o &lt;&lt; <span class="built_in">endl</span>;</div><div class="line"></div><div class="line">	&#125;</div><div class="line">	<span class="keyword">return</span>(<span class="number">0</span>);</div><div class="line">&#125;</div></pre></td></tr></table></figure><p></p>
<p>&nbsp;</p>
<hr>
<h4 id="Codefoces-436B-Om-Nom-and-Spiders"><a href="#Codefoces-436B-Om-Nom-and-Spiders" class="headerlink" title="Codefoces 436B-Om Nom and Spiders"></a>Codefoces 436B-Om Nom and Spiders</h4><div id="vj_description" class="hiddable">

<p>Description</p>
<div class="textBG">

<p>Om Nom really likes candies and doesn’t like spiders as they frequently steal candies. One day Om Nom fancied a walk in a park. Unfortunately, the park has some spiders and Om Nom doesn’t want to see them at all.</p>
<p><center><img src="http://espresso.codeforces.com/5be91a371adfaffc95d78b5f3caf8c1149be2c29.png" alt=""></center>The park can be represented as a rectangular <span class="tex-span"><em>n</em> × <em>m</em></span> field. The park has <span class="tex-span"><em>k</em></span> spiders, each spider at time 0 is at some cell of the field. The spiders move all the time, and each spider always moves in one of the four directions (left, right, down, up). In a unit of time, a spider crawls from his cell to the side-adjacent cell in the corresponding direction. If there is no cell in the given direction, then the spider leaves the park. The spiders do not interfere with each other as they move. Specifically, one cell can have multiple spiders at the same time.</p>
<p>Om Nom isn’t yet sure where to start his walk from but he definitely wants:</p>
<ul>
<li>to start walking at time 0 at an upper row cell of the field (it is guaranteed that the cells in this row do not contain any spiders);</li>
<li>to walk by moving down the field towards the lowest row (the walk ends when Om Nom leaves the boundaries of the park).<br>We know that Om Nom moves by jumping. One jump takes one time unit and transports the little monster from his cell to either a side-adjacent cell on the lower row or outside the park boundaries.</li>
</ul>
<p>Each time Om Nom lands in a cell he sees all the spiders that have come to that cell at this moment of time. Om Nom wants to choose the optimal cell to start the walk from. That’s why he wonders: for each possible starting cell, how many spiders will he see during the walk if he starts from this cell? Help him and calculate the required value for each possible starting cell.</p>
<p></p></div><br></div><p></p>
<div id="vj_input" class="hiddable">

<p>Input</p>
<div class="textBG">

<p>The first line contains three integers <span class="tex-span"><em>n</em>, <em>m</em>, <em>k</em></span><span class="tex-span">(2 ≤ <em>n</em>, <em>m</em> ≤ 2000; 0 ≤ <em>k</em> ≤ <em>m</em>(<em>n</em> - 1))</span>.</p>
<p>Each of the next <span class="tex-span"><em>n</em></span> lines contains <span class="tex-span"><em>m</em></span> characters — the description of the park. The characters in the <span class="tex-span"><em>i</em></span>-th line describe the <span class="tex-span"><em>i</em></span>-th row of the park field. If the character in the line equals “<span class="tex-font-style-tt">.</span>“, that means that the corresponding cell of the field is empty; otherwise, the character in the line will equal one of the four characters: “<span class="tex-font-style-tt">L</span>“ (meaning that this cell has a spider at time 0, moving left), “<span class="tex-font-style-tt">R</span>“ (a spider moving right), “<span class="tex-font-style-tt">U</span>“ (a spider moving up), “<span class="tex-font-style-tt">D</span>“ (a spider moving down).</p>
<p>It is guaranteed that the first row doesn’t contain any spiders. It is guaranteed that the description of the field contains no extra characters. It is guaranteed that at time 0 the field contains exactly <span class="tex-span"><em>k</em></span> spiders.</p>
<p></p></div><br></div><p></p>
<div id="vj_output" class="hiddable">

<p>Output</p>
<div class="textBG">

<p>Print <span class="tex-span"><em>m</em></span> integers: the <span class="tex-span"><em>j</em></span>-th integer must show the number of spiders Om Nom will see if he starts his walk from the <span class="tex-span"><em>j</em></span>-th cell of the first row. The cells in any row of the field are numbered from left to right.</p>
<p></p></div><br></div><p></p>
<div id="vj_sampleInput" class="hiddable">

<p>Sample Input</p>
<p><div class="textBG"></div></p>
<p><div class="input"></div></p>
<p><div class="title">Input</div></p>
<p><pre>3 3 4<br>…<br>R.L<br>R.U</pre><br></p></div><p></p>
<p><div class="output"></div></p>
<p><div class="title">Output</div></p>
<p><pre>0 2 2</pre><br></p>
<p><div class="input"></div></p>
<p><div class="title">Input</div></p>
<p><pre>2 2 2<br>..<br>RL</pre><br></p>
<p><div class="output"></div></p>
<p><div class="title">Output</div></p>
<p><pre>1 1</pre><br></p>
<p><div class="input"></div></p>
<p><div class="title">Input</div></p>
<p><pre>2 2 2<br>..<br>LR</pre><br></p>
<p><div class="output"></div></p>
<p><div class="title">Output</div></p>
<p><pre>0 0</pre><br></p>
<p><div class="input"></div></p>
<p><div class="title">Input</div></p>
<p><pre>3 4 8<br>….<br>RRLL<br>UUUU</pre><br></p>
<p><div class="output"></div></p>
<p><div class="title">Output</div></p>
<p><pre>1 3 3 1</pre><br></p>
<p><div class="input"></div></p>
<p><div class="title">Input</div></p>
<p><pre>2 2 2<br>..<br>UU</pre><br></p>
<p><div class="output"></div></p>
<p><div class="title">Output</div></p>
<p><pre>0 0</pre><br><br><br></p>
<div id="vj_hint" class="hiddable">

<p>Hint</p>
<div class="textBG">

<p>Consider the first sample. The notes below show how the spider arrangement changes on the field over time:</p>
<p><pre>…        …        ..U       …<br>R.L   -&gt;   .*U   -&gt;   L.R   -&gt;  …<br>R.U        .R.        ..R       …</pre></p>
<p><br>Character “<span class="tex-font-style-tt">*</span>“ represents a cell that contains two spiders at the same time.</p>
<ul>
<li>If Om Nom starts from the first cell of the first row, he won’t see any spiders.</li>
<li>If he starts from the second cell, he will see two spiders at time 1.</li>
<li>If he starts from the third cell, he will see two spiders: one at time 1, the other one at time 2.<br></li></ul></div><br></div><figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></div><div class="line">&#123;</div><div class="line">	<span class="keyword">int</span> n, m, k,i,j,fuck;</div><div class="line">	<span class="keyword">char</span> in[<span class="number">2002</span>][<span class="number">2002</span>];</div><div class="line">	<span class="keyword">while</span> (<span class="built_in">scanf</span>(<span class="string">"%d%d%d"</span>, &amp;n,&amp;m,&amp;k) != EOF)</div><div class="line">	&#123;	</div><div class="line">		fuck = <span class="number">0</span>;</div><div class="line">		<span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; n; i++)</div><div class="line">			<span class="keyword">for</span> (j = <span class="number">0</span>; j &lt; m; j++)</div><div class="line">			&#123;</div><div class="line">				<span class="built_in">cin</span> &gt;&gt; in[i][j];</div><div class="line">			&#125;</div><div class="line"></div><div class="line">		<span class="keyword">for</span> (j = <span class="number">0</span>; j &lt; m; j++)</div><div class="line">		&#123;</div><div class="line">			<span class="keyword">for</span> (i = <span class="number">1</span>; i &lt; n; i++)</div><div class="line">			&#123;</div><div class="line">				<span class="keyword">if</span>(i+i&lt;n)<span class="keyword">if</span> (in[i + i][j] == <span class="string">'U'</span>)fuck++;</div><div class="line">				<span class="keyword">if</span> (j - i&gt;=<span class="number">0</span>&amp;&amp;j-i&lt;m)<span class="keyword">if</span> (in[i][j - i] == <span class="string">'R'</span>)fuck++;</div><div class="line">				<span class="keyword">if</span> (j + i&lt;m)<span class="keyword">if</span> (in[i][j + i] == <span class="string">'L'</span>)fuck++;</div><div class="line">			&#125;</div><div class="line">			<span class="built_in">cout</span> &lt;&lt; fuck &lt;&lt; <span class="string">' '</span>; fuck = <span class="number">0</span>;</div><div class="line">		&#125;</div><div class="line">        <span class="built_in">cout</span>&lt;&lt;<span class="built_in">endl</span>;</div><div class="line"></div><div class="line">	&#125;</div><div class="line">	<span class="keyword">return</span>(<span class="number">0</span>);</div><div class="line">&#125;</div></pre></td></tr></table></figure>


<p>&nbsp;</p>
<hr>
<h4 id="Codeforces-435B-Pasha-Maximizes"><a href="#Codeforces-435B-Pasha-Maximizes" class="headerlink" title="Codeforces 435B Pasha Maximizes"></a>Codeforces 435B Pasha Maximizes</h4><div id="vj_description" class="hiddable">

<p>Description</p>
<div class="textBG">

<p>Pasha has a positive integer <span class="tex-span"><em>a</em></span> without leading zeroes. Today he decided that the number is too small and he should make it larger. Unfortunately, the only operation Pasha can do is to swap two adjacent decimal digits of the integer.</p>
<p>Help Pasha count the maximum number he can get if he has the time to make at most <span class="tex-span"><em>k</em></span> swaps.</p>
<p></p></div><br></div><p></p>
<div id="vj_input" class="hiddable">

<p>Input</p>
<div class="textBG">

<p>The single line contains two integers <span class="tex-span"><em>a</em></span> and <span class="tex-span"><em>k</em></span><span class="tex-span">(1 ≤ <em>a</em> ≤ 10<sup class="upper-index">18</sup>; 0 ≤ <em>k</em> ≤ 100)</span>.</p>
<p></p></div><br></div><p></p>
<div id="vj_output" class="hiddable">

<p>Output</p>
<div class="textBG">

<p>Print the maximum number that Pasha can get if he makes at most <span class="tex-span"><em>k</em></span> swaps.</p>
<p></p></div><br></div><p></p>
<div id="vj_sampleInput" class="hiddable">

<p>Sample Input</p>
<p><div class="textBG"></div></p>
<p><div class="input"></div></p>
<p><div class="title">Input</div></p>
<p><pre>1990 1</pre><br></p></div><p></p>
<p><div class="output"></div></p>
<p><div class="title">Output</div></p>
<p><pre>9190</pre><br></p>
<p><div class="input"></div></p>
<p><div class="title">Input</div></p>
<p><pre>300 0</pre><br></p>
<p><div class="output"></div></p>
<p><div class="title">Output</div></p>
<p><pre>300</pre><br></p>
<p><div class="input"></div></p>
<p><div class="title">Input</div></p>
<p><pre>1034 2</pre><br></p>
<p><div class="output"></div></p>
<p><div class="title">Output</div></p>
<p><pre>3104</pre><br></p>
<p><div class="input"></div></p>
<p><div class="title">Input</div></p>
<p><pre class="">9090000078001234 6</pre><br></p>
<p><div class="output"></div></p>
<p><div class="title">Output</div></p>
<p><pre class="">9907000008001234<br></pre><br><br><br><br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></div><div class="line">&#123;</div><div class="line">	<span class="keyword">long</span> <span class="keyword">int</span> n, x[<span class="number">100008</span>], y[<span class="number">100008</span>],  i = <span class="number">0</span>, j,xxx[<span class="number">100008</span>],yyy[<span class="number">100008</span>],u;</div><div class="line">	<span class="keyword">while</span> (<span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n) != EOF)</div><div class="line">	&#123;</div><div class="line"></div><div class="line">		<span class="built_in">memset</span>(xxx, <span class="number">0</span>, <span class="keyword">sizeof</span>(xxx));</div><div class="line">		<span class="built_in">memset</span>(yyy, <span class="number">0</span>, <span class="keyword">sizeof</span>(yyy));</div><div class="line">		<span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; n; i++)</div><div class="line">		&#123;</div><div class="line">			<span class="built_in">cin</span> &gt;&gt; x[i] &gt;&gt; y[i];</div><div class="line"></div><div class="line">			xxx[x[i]]++;</div><div class="line">			yyy[y[i]]++;</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; n; i++)</div><div class="line">		&#123;</div><div class="line">			u = n - xxx[y[i]] - <span class="number">1</span>;</div><div class="line">			<span class="built_in">cout</span> &lt;&lt; <span class="number">2</span>*n - <span class="number">2</span> - u  &lt;&lt; <span class="string">' '</span> &lt;&lt; u &lt;&lt; <span class="built_in">endl</span>;</div><div class="line">		&#125;</div><div class="line"></div><div class="line">	&#125;</div><div class="line">	<span class="keyword">return</span>(<span class="number">0</span>);</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>&nbsp;</p>
<hr>
<h4 id="codeforce-432B-Football-Kit"><a href="#codeforce-432B-Football-Kit" class="headerlink" title="codeforce 432B - Football Kit"></a>codeforce 432B - Football Kit</h4><div id="vj_description" class="hiddable">

<p>Description</p>
<div class="textBG">

<p>Consider a football tournament where <span class="tex-span"><em>n</em></span> teams participate. Each team has two football kits: for home games, and for away games. The kit for home games of the <span class="tex-span"><em>i</em></span>-th team has color <span class="tex-span"><em>x</em><sub class="lower-index"><em>i</em></sub></span> and the kit for away games of this team has color <span class="tex-span"><em>y</em><sub class="lower-index"><em>i</em></sub></span><span class="tex-span">(<em>x</em><sub class="lower-index"><em>i</em></sub> ≠ <em>y</em><sub class="lower-index"><em>i</em></sub>)</span>.</p>
<p>In the tournament, each team plays exactly one home game and exactly one away game with each other team (<span class="tex-span"><em>n</em>(<em>n</em> - 1)</span> games in total). The team, that plays the home game, traditionally plays in its home kit. The team that plays an away game plays in its away kit. However, if two teams has the kits of the same color, they cannot be distinguished. In this case the away team plays in its home kit.</p>
<p>Calculate how many games in the described tournament each team plays in its home kit and how many games it plays in its away kit.</p>
<p></p></div><br></div><p></p>
<div id="vj_input" class="hiddable">

<p>Input</p>
<div class="textBG">

<p>The first line contains a single integer <span class="tex-span"><em>n</em></span><span class="tex-span">(2 ≤ <em>n</em> ≤ 10<sup class="upper-index">5</sup>)</span> — the number of teams. Next <span class="tex-span"><em>n</em></span> lines contain the description of the teams. The <span class="tex-span"><em>i</em></span>-th line contains two space-separated numbers <span class="tex-span"><em>x</em><sub class="lower-index"><em>i</em></sub></span>, <span class="tex-span"><em>y</em><sub class="lower-index"><em>i</em></sub></span><span class="tex-span">(1 ≤ <em>x</em><sub class="lower-index"><em>i</em></sub>, <em>y</em><sub class="lower-index"><em>i</em></sub> ≤ 10<sup class="upper-index">5</sup>; <em>x</em><sub class="lower-index"><em>i</em></sub> ≠ <em>y</em><sub class="lower-index"><em>i</em></sub>)</span> — the color numbers for the home and away kits of the<span class="tex-span"><em>i</em></span>-th team.</p>
<p></p></div><br></div><p></p>
<div id="vj_output" class="hiddable">

<p>Output</p>
<div class="textBG">

<p>For each team, print on a single line two space-separated integers — the number of games this team is going to play in home and away kits, correspondingly. Print the answers for the teams in the order they appeared in the input.</p>
<p></p></div><br></div><p></p>
<div id="vj_sampleInput" class="hiddable">

<p>Sample Input</p>
<p><div class="textBG"></div></p>
<p><div class="input"></div></p>
<p><div class="title">Input</div></p>
<p><pre>2<br>1 2<br>2 1</pre><br></p></div><p></p>
<p><div class="output"></div></p>
<p><div class="title">Output</div></p>
<p><pre>2 0<br>2 0</pre><br></p>
<p><div class="input"></div></p>
<p><div class="title">Input</div></p>
<p><pre>3<br>1 2<br>2 1<br>1 3</pre><br></p>
<p><div class="output"></div></p>
<p><div class="title">Output</div></p>
<p><pre class="">3 1<br>4 0<br>2 2</pre><br><br><br><br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></div><div class="line">&#123;</div><div class="line">	<span class="keyword">long</span> <span class="keyword">int</span> n, x[<span class="number">100008</span>], y[<span class="number">100008</span>],  i = <span class="number">0</span>, j,xxx[<span class="number">100008</span>],yyy[<span class="number">100008</span>],u;</div><div class="line">	<span class="keyword">while</span> (<span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n) != EOF)</div><div class="line">	&#123;</div><div class="line"></div><div class="line">		<span class="built_in">memset</span>(xxx, <span class="number">0</span>, <span class="keyword">sizeof</span>(xxx));</div><div class="line">		<span class="built_in">memset</span>(yyy, <span class="number">0</span>, <span class="keyword">sizeof</span>(yyy));</div><div class="line">		<span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; n; i++)</div><div class="line">		&#123;</div><div class="line">			<span class="built_in">cin</span> &gt;&gt; x[i] &gt;&gt; y[i];</div><div class="line"></div><div class="line">			xxx[x[i]]++;</div><div class="line">			yyy[y[i]]++;</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; n; i++)</div><div class="line">		&#123;</div><div class="line">			u = n - xxx[y[i]] - <span class="number">1</span>;</div><div class="line">			<span class="built_in">cout</span> &lt;&lt; <span class="number">2</span>*n - <span class="number">2</span> - u  &lt;&lt; <span class="string">' '</span> &lt;&lt; u &lt;&lt; <span class="built_in">endl</span>;</div><div class="line">		&#125;</div><div class="line"></div><div class="line">	&#125;</div><div class="line">	<span class="keyword">return</span>(<span class="number">0</span>);</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>&nbsp;</p>
<hr>
<h4 id="Codeforces-431B-Shower-Line"><a href="#Codeforces-431B-Shower-Line" class="headerlink" title="Codeforces 431B Shower Line"></a>Codeforces 431B Shower Line</h4><div id="vj_description" class="hiddable">

<p>Description</p>
<div class="textBG">

<p>Many students live in a dormitory. A dormitory is a whole new world of funny amusements and possibilities but it does have its drawbacks.</p>
<p>There is only one shower and there are multiple students who wish to have a shower in the morning. That’s why every morning there is a line of five people in front of the dormitory shower door. As soon as the shower opens, the first person from the line enters the shower. After a while the first person leaves the shower and the next person enters the shower. The process continues until everybody in the line has a shower.</p>
<p>Having a shower takes some time, so the students in the line talk as they wait. At each moment of time the students talk in pairs: the<span class="tex-span">(2<em>i</em> - 1)</span>-th man in the line (for the current moment) talks with the <span class="tex-span">(2<em>i</em>)</span>-th one.</p>
<p>Let’s look at this process in more detail. Let’s number the people from 1 to 5. Let’s assume that the line initially looks as 23154 (person number 2 stands at the beginning of the line). Then, before the shower opens, 2 talks with 3, 1 talks with 5, 4 doesn’t talk with anyone. Then 2 enters the shower. While 2 has a shower, 3 and 1 talk, 5 and 4 talk too. Then, 3 enters the shower. While 3 has a shower, 1 and 5 talk, 4 doesn’t talk to anyone. Then 1 enters the shower and while he is there, 5 and 4 talk. Then 5 enters the shower, and then 4 enters the shower.</p>
<p>We know that if students <span class="tex-span"><em>i</em></span> and <span class="tex-span"><em>j</em></span> talk, then the <span class="tex-span"><em>i</em></span>-th student’s happiness increases by <span class="tex-span"><em>g</em><sub class="lower-index"><em>ij</em></sub></span> and the <span class="tex-span"><em>j</em></span>-th student’s happiness increases by <span class="tex-span"><em>g</em><sub class="lower-index"><em>ji</em></sub></span>. Your task is to find such initial order of students in the line that the total happiness of all students will be maximum in the end. Please note that some pair of students may have a talk several times. In the example above students 1 and 5 talk while they wait for the shower to open and while 3 has a shower.</p>
<p></p></div><br></div><p></p>
<div id="vj_input" class="hiddable">

<p>Input</p>
<div class="textBG">

<p>The input consists of five lines, each line contains five space-separated integers: the <span class="tex-span"><em>j</em></span>-th number in the <span class="tex-span"><em>i</em></span>-th line shows <span class="tex-span"><em>g</em><sub class="lower-index"><em>ij</em></sub></span> (<span class="tex-span">0 ≤ <em>g</em><sub class="lower-index"><em>ij</em></sub> ≤ 10<sup class="upper-index">5</sup></span>). It is guaranteed that <span class="tex-span"><em>g</em><sub class="lower-index"><em>ii</em></sub> = 0</span> for all <span class="tex-span"><em>i</em></span>.</p>
<p>Assume that the students are numbered from 1 to 5.</p>
<p></p></div><br></div><p></p>
<div id="vj_output" class="hiddable">

<p>Output</p>
<div class="textBG">

<p>Print a single integer — the maximum possible total happiness of the students.</p>
<p></p></div><br></div><p></p>
<div id="vj_sampleInput" class="hiddable">

<p>Sample Input</p>
<p><div class="textBG"></div></p>
<p><div class="input"></div></p>
<p><div class="title">Input</div></p>
<p><pre>0 0 0 0 9<br>0 0 0 0 0<br>0 0 0 0 0<br>0 0 0 0 0<br>7 0 0 0 0</pre><br></p></div><p></p>
<p><div class="output"></div></p>
<p><div class="title">Output</div></p>
<p><pre>32</pre><br></p>
<p><div class="input"></div></p>
<p><div class="title">Input</div></p>
<p><pre>0 43 21 18 2<br>3 0 21 11 65<br>5 2 0 1 4<br>54 62 12 0 99<br>87 64 81 33 0</pre><br></p>
<p><div class="output"></div></p>
<p><div class="title">Output</div></p>
<p><pre class="">620</pre><br><br><br><br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></div><div class="line">&#123;</div><div class="line">	<span class="keyword">long</span> <span class="keyword">int</span> o[<span class="number">5</span>][<span class="number">5</span>], i,j, ii, iii, a, b, c, d, e,m=<span class="number">0</span>,max=<span class="number">0</span>;</div><div class="line">	<span class="keyword">while</span> (<span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;o[<span class="number">0</span>][<span class="number">0</span>]) != EOF)</div><div class="line">	&#123;</div><div class="line">		<span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">5</span>; i++)</div><div class="line">			<span class="keyword">for</span> (j = <span class="number">0</span>; j &lt; <span class="number">5</span>; j++)</div><div class="line">			&#123;</div><div class="line">				<span class="keyword">if</span> (i == <span class="number">0</span> &amp;&amp; j == <span class="number">0</span>)j++;</div><div class="line">				<span class="built_in">cin</span> &gt;&gt; o[i][j];</div><div class="line">			&#125;</div><div class="line">		<span class="keyword">for</span> (a = <span class="number">0</span>; a &lt; <span class="number">5</span>; a++)</div><div class="line">			<span class="keyword">for</span> (b = <span class="number">0</span>; b &lt; <span class="number">5</span>;b++)</div><div class="line">				<span class="keyword">for</span> (c = <span class="number">0</span>; c &lt; <span class="number">5</span>; c++)</div><div class="line">					<span class="keyword">for</span> (d = <span class="number">0</span>; d &lt; <span class="number">5</span>; d++)</div><div class="line">						<span class="keyword">for</span> (e = <span class="number">0</span>; e &lt; <span class="number">5</span>; e++)</div><div class="line">						&#123;</div><div class="line">							<span class="keyword">if</span>(a!=b&amp;&amp;a!=c&amp;&amp;a!=d&amp;&amp;a!=e&amp;&amp;b!=c&amp;&amp;b!=d&amp;&amp;b!=e&amp;&amp;c!=d&amp;&amp;c!=e&amp;&amp;d!=e)</div><div class="line">							m = o[a][b] + o[b][a] + o[b][c] + o[c][b] + (o[c][d] + o[d][c]) * <span class="number">2</span> + (o[d][e] + o[e][d]) * <span class="number">2</span>;</div><div class="line">							<span class="keyword">if</span> (m&gt;max) max = m;</div><div class="line">						&#125;</div><div class="line">		<span class="built_in">cout</span> &lt;&lt; max&lt;&lt;<span class="built_in">endl</span>;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">return</span>(<span class="number">0</span>);</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>&nbsp;</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;上个月开始搞ACM(ICPC)，虽然只是做一些水题。一道题苦想半天调试N遍最后AC，这感觉 特别爽哟。&lt;/p&gt;
&lt;p&gt;随手拿最近的一些水题放上来吧，当做纪念，可能几年后我成为了大神，人们来嘲笑我说，这么烂的代码竟然是他曾经写的。&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&quot;Codef
    
    </summary>
    
      <category term="未分类" scheme="http://blog.cosimahan.com/categories/%E6%9C%AA%E5%88%86%E7%B1%BB/"/>
    
    
  </entry>
  
  <entry>
    <title>大一秋游1——中南百草原</title>
    <link href="http://blog.cosimahan.com/%E5%A4%A7%E4%B8%80%E7%A7%8B%E6%B8%B81%E2%80%94%E2%80%94%E4%B8%AD%E5%8D%97%E7%99%BE%E8%8D%89%E5%8E%9F.html"/>
    <id>http://blog.cosimahan.com/大一秋游1——中南百草原.html</id>
    <published>2014-10-26T09:25:57.000Z</published>
    <updated>2016-08-16T06:36:44.862Z</updated>
    
    <content type="html"><![CDATA[<p>这是大学里的第一次班级活动，特发此文以示纪念。</p>
<p>真尽兴，整个景区几乎走遍了，娱乐设施玩遍了，中间还吃了顿自助烧烤，一天下来好累呀。</p>
<p>没有拍照的习惯，只拍了几张，都是些失去本性的动物们，有的我也叫不出名字来。</p>
<p><a href="http://7u2p8s.com1.z0.glb.clouddn.com/blog/img/2014/11/IMG_20141025_104940.jpg" target="_blank" rel="external"><img src="http://7u2p8s.com1.z0.glb.clouddn.com/blog/img/2014/11/IMG_20141025_104940-300x225.jpg" alt="IMG_20141025_104940"></a> <a href="http://7u2p8s.com1.z0.glb.clouddn.com/blog/img/2014/11/IMG_20141025_102325-e1415334508927.jpg" target="_blank" rel="external"><img src="http://7u2p8s.com1.z0.glb.clouddn.com/blog/img/2014/11/IMG_20141025_102325-e1415334508927-300x225.jpg" alt="IMG_20141025_102325"></a> <a href="http://7u2p8s.com1.z0.glb.clouddn.com/blog/img/2014/11/IMG_20141025_102257-e1415334434711.jpg" target="_blank" rel="external"><img src="http://7u2p8s.com1.z0.glb.clouddn.com/blog/img/2014/11/IMG_20141025_102257-e1415334434711-300x225.jpg" alt="IMG_20141025_102257"></a> <a href="http://7u2p8s.com1.z0.glb.clouddn.com/blog/img/2014/11/IMG_20141025_101355-e1415334543795.jpg" target="_blank" rel="external"><img src="http://7u2p8s.com1.z0.glb.clouddn.com/blog/img/2014/11/IMG_20141025_101355-e1415334543795-300x225.jpg" alt="IMG_20141025_101355"></a> <a href="http://7u2p8s.com1.z0.glb.clouddn.com/blog/img/2014/11/IMG_20141025_101239.jpg" target="_blank" rel="external"><img src="http://7u2p8s.com1.z0.glb.clouddn.com/blog/img/2014/11/IMG_20141025_101239-300x225.jpg" alt="IMG_20141025_101239"></a> <a href="http://7u2p8s.com1.z0.glb.clouddn.com/blog/img/2014/11/IMG_20141025_095709-e1415334687827.jpg" target="_blank" rel="external"><img src="http://7u2p8s.com1.z0.glb.clouddn.com/blog/img/2014/11/IMG_20141025_095709-e1415334687827-300x225.jpg" alt="IMG_20141025_095709"></a> <a href="http://7u2p8s.com1.z0.glb.clouddn.com/blog/img/2014/11/IMG_20141025_095339.jpg" target="_blank" rel="external"><img src="http://7u2p8s.com1.z0.glb.clouddn.com/blog/img/2014/11/IMG_20141025_095339-300x225.jpg" alt="IMG_20141025_095339"></a> <a href="http://7u2p8s.com1.z0.glb.clouddn.com/blog/img/2014/11/IMG_20141025_094433-e1415334812956.jpg" target="_blank" rel="external"><img src="http://7u2p8s.com1.z0.glb.clouddn.com/blog/img/2014/11/IMG_20141025_094433-e1415334812956-225x300.jpg" alt="IMG_20141025_094433"></a> <a href="http://7u2p8s.com1.z0.glb.clouddn.com/blog/img/2014/11/IMG_20141025_094317.jpg" target="_blank" rel="external"><img src="http://7u2p8s.com1.z0.glb.clouddn.com/blog/img/2014/11/IMG_20141025_094317-300x225.jpg" alt="IMG_20141025_094317"></a> <a href="http://7u2p8s.com1.z0.glb.clouddn.com/blog/img/2014/11/IMG_20141025_094305.jpg" target="_blank" rel="external"><img src="http://7u2p8s.com1.z0.glb.clouddn.com/blog/img/2014/11/IMG_20141025_094305-300x225.jpg" alt="IMG_20141025_094305"></a> <a href="http://7u2p8s.com1.z0.glb.clouddn.com/blog/img/2014/11/IMG_20141025_094256.jpg" target="_blank" rel="external"><img src="http://7u2p8s.com1.z0.glb.clouddn.com/blog/img/2014/11/IMG_20141025_094256-300x225.jpg" alt="IMG_20141025_094256"></a> <a href="http://7u2p8s.com1.z0.glb.clouddn.com/blog/img/2014/11/IMG_20141025_093947.jpg" target="_blank" rel="external"><img src="http://7u2p8s.com1.z0.glb.clouddn.com/blog/img/2014/11/IMG_20141025_093947-300x225.jpg" alt="IMG_20141025_093947"></a> <a href="http://7u2p8s.com1.z0.glb.clouddn.com/blog/img/2014/11/IMG_20141025_093858.jpg" target="_blank" rel="external"><img src="http://7u2p8s.com1.z0.glb.clouddn.com/blog/img/2014/11/IMG_20141025_093858-300x225.jpg" alt="IMG_20141025_093858"></a> <a href="http://7u2p8s.com1.z0.glb.clouddn.com/blog/img/2014/11/IMG_20141025_093640.jpg" target="_blank" rel="external"><img src="http://7u2p8s.com1.z0.glb.clouddn.com/blog/img/2014/11/IMG_20141025_093640-300x225.jpg" alt="IMG_20141025_093640"></a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;这是大学里的第一次班级活动，特发此文以示纪念。&lt;/p&gt;
&lt;p&gt;真尽兴，整个景区几乎走遍了，娱乐设施玩遍了，中间还吃了顿自助烧烤，一天下来好累呀。&lt;/p&gt;
&lt;p&gt;没有拍照的习惯，只拍了几张，都是些失去本性的动物们，有的我也叫不出名字来。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;htt
    
    </summary>
    
      <category term="未分类" scheme="http://blog.cosimahan.com/categories/%E6%9C%AA%E5%88%86%E7%B1%BB/"/>
    
    
  </entry>
  
</feed>
